{"version":3,"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/api_compatibility.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/shared/xml_parser.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/webgl.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","pdfjsLib","this","installedModules","__w_pdfjs_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_display_utils","_api","_util","_annotation_layer","_worker_options","_text_layer","_svg","PDFNetworkStream","require","PDFFetchStream","isFetchSupported","setPDFNetworkStreamFactory","params","isValidFetchUrl","url","addLinkAttributes","link","target","rel","enabled","assert","urlNullRemoved","removeNullCharacters","targetStr","LinkTarget","NONE","SELF","BLANK","PARENT","TOP","getFilenameFromUrl","anchor","query","end","Math","length","loadScript","src","Promise","resolve","reject","script","document","Error","head","documentElement","appendChild","deprecated","details","console","SVG_NS","BaseCanvasFactory","constructor","unreachable","reset","canvasAndContext","canvas","width","height","destroy","DOMCanvasFactory","ownerDocument","globalThis","super","_document","createElement","context","BaseCMapReaderFactory","baseUrl","isCompressed","[object Object]","compressionType","CMapCompressionType","BINARY","_fetchData","catch","reason","DOMCMapReaderFactory","baseURI","fetch","then","async","response","ok","statusText","cMapData","Uint8Array","arrayBuffer","stringToBytes","text","request","XMLHttpRequest","DONE","responseText","DOMSVGFactory","svg","type","PageViewport","viewBox","scale","rotation","offsetX","offsetY","dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","transform","clone","slice","convertToViewportPoint","Util","applyTransform","x","y","convertToViewportRectangle","topLeft","rect","bottomRight","convertToPdfPoint","applyInverseTransform","RenderingCancelledException","BaseException","msg","StatTimer","started","times","time","warn","Date","now","timeEnd","push","start","toString","outBuf","longest","duration","Response","ReadableStream","protocol","URL","ex","pdfDateStringRegex","PDFDateString","input","isString","RegExp","matches","year","parseInt","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","arraysToBytes","arr","resultLength","arrayByteLength","pos","data","item","itemLength","byteLength","bytesToString","bytes","String","strBuf","chunkEnd","chunk","createPromiseCapability","capability","isSettled","escapeString","str","replace","match","encodeToXmlString","buffer","ii","char","entity","XMLEntities","toUpperCase","getModificationDate","date","getUTCMonth","padStart","getVerbosityLevel","verbosity","info","VerbosityLevel","INFOS","isArrayBuffer","v","undefined","isArrayEqual","arr1","arr2","every","element","index","isBool","isNum","isSameOrigin","otherUrl","base","origin","e","other","createValidAbsoluteUrl","absoluteUrl","_isValidProtocol","setVerbosityLevel","level","Number","string32","stringToPDFString","code","PDFStringTranslateTable","stringToUTF8String","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","MARKED","REVIEW","UNMARKED","ACCEPTED","REJECTED","CANCELLED","COMPLETED","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontGetPath","errorMarkedContent","NEED_PASSWORD","INCORRECT_PASSWORD","cond","shadow","obj","prop","configurable","writable","BaseExceptionClosure","message","PasswordException","UnknownErrorException","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","NullCharactersRegExp","IsLittleEndianCached","isLittleEndian","buffer8","Uint32Array","view32","IsEvalSupportedCached","isEvalSupported","Function","rgbBuf","g","b","m1","m2","p1","p2","p3","p4","transpose","a","first","sx","sy","rect1","rect2","compare","orderedX","sort","orderedY","result","createObjectURL","createObjectURLClosure","digits","contentType","forceDataSchema","blob","Blob","b1","b2","b3","60","62","38","34","39","_font_loader","_node_utils","_annotation_storage","_api_compatibility","_canvas","_is_node","_message_handler","_metadata","_optional_content_config","_transport_stream","_webgl","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","ServiceWorkerOptions","showUnverifiedSignatures","window","DefaultCanvasFactory","isNodeJS","NodeCanvasFactory","DefaultCMapReaderFactory","NodeCMapReaderFactory","createPDFNetworkStream","pdfNetworkStreamFactory","getDocument","task","PDFDocumentLoadingTask","source","PDFDataRangeTransport","range","rangeTransport","worker","pdfBytes","isNaN","location","href","maxImageSize","disableFontFace","apiCompatibilityParams","disableRange","disableStream","disableAutoFetch","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","docId","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","httpHeaders","withCredentials","rangeChunkSize","all","workerId","messageHandler","MessageHandler","postMessageTransfers","transport","WorkerTransport","pdfDataRangeTransport","sendWithPromise","apiVersion","password","docBaseUrl","ignoreErrors","fontExtraProperties","PDFDocumentLoadingTaskClosure","nextDocumentId","_capability","_transport","_worker","onPassword","onProgress","onUnsupportedFeature","promise","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","onDataProgress","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","abort","PDFDocumentProxy","_pdfInfo","pdfInfo","annotationStorage","AnnotationStorage","numPages","fingerprint","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getData","getDownloadInfo","downloadInfoCapability","getStats","cleanup","startCleanup","loadingTask","loadingParams","saveDocument","PDFPageProxy","pdfBug","_pageIndex","pageIndex","_pageInfo","pageInfo","_ownerDocument","_stats","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","_intentStates","Map","rotate","userUnit","view","getViewport","getAnnotations","intent","annotationsPromise","annotationsIntent","render","canvasContext","viewport","enableWebGL","renderInteractiveForms","imageLayer","canvasFactory","background","optionalContentConfigPromise","renderingIntent","intentState","set","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","webGLContext","WebGLContext","enable","displayReadyCapability","fnArray","argsArray","lastChunk","_pumpOperatorList","getAll","complete","error","internalRenderTask","_tryCleanup","_abortOperatorList","InternalRenderTask","callback","operatorList","useRequestAnimationFrame","renderTasks","renderTask","transparency","optionalContentConfig","operatorListChanged","getOperatorList","opListTask","opListReadCapability","streamTextContent","normalizeWhitespace","disableCombineTextItems","sendWithStream","combineTextItems","highWaterMark","size","textContent","getTextContent","readableStream","reader","getReader","items","styles","pump","done","_destroy","pageCache","waitOn","force","completed","cancel","clear","resetStats","values","_startRenderPage","_renderPageChunk","operatorListChunk","args","streamReader","setTimeout","curIntentState","delete","stats","LoopbackPort","defer","_listeners","_defer","_deferred","postMessage","forEach","cloned","WeakMap","cloneValue","transfers","byteOffset","Array","desc","addEventListener","removeEventListener","indexOf","splice","terminate","PDFWorkerClosure","pdfWorkerPorts","isWorkerDisabled","fallbackWorkerSrc","nextFakeWorkerId","fakeWorkerCapability","pdfjsFilePath","getWorkerSrc","workerSrc","getMainThreadWorkerMessageHandler","mainWorkerMessageHandler","WorkerMessageHandler","setupFakeWorkerGlobal","loader","eval","createCDNWrapper","wrapper","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","terminateEarly","onWorkerError","_setupFakeWorker","supportTransfers","sendTest","testObj","workerHandler","fontLoader","FontLoader","_onUnsupportedFeature","_params","cMapUrl","CMapReaderFactory","cMapPacked","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","page","terminated","cancelAllRequests","sink","getFullReader","evt","loaded","read","close","readyReason","headersCapability","fullReader","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","begin","_numPages","exception","updatePassword","exportedData","has","exportedError","fontRegistry","registerFont","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","fetched","builtInCMap","featureId","filename","resetModified","results","OptionalContentConfig","metadata","Metadata","contentDispositionFilename","_objs","_ensureObj","objId","resolved","RenderTask","_internalRenderTask","onContinue","InternalRenderTaskClosure","canvasInRendering","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","initializeGraphics","StepperManager","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","executeOperatorList","version","build","BaseFontLoader","nativeFontFaces","styleElement","addNativeFontFace","nativeFontFace","fonts","add","insertRule","getElementsByTagName","styleSheet","sheet","remove","missingFile","isFontLoadingAPISupported","createNativeFontFace","UNSUPPORTED_FEATURES","family","rule","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","supported","_loadTestFont","GenericFontLoader","loadingContext","requests","nextRequestId","loadTestFontId","navigator","exec","userAgent","completeRequest","otherRequest","shift","atob","int32","offset","spliceString","insert","chunk1","ctx","called","checksum","btoa","names","loadedName","div","span","body","isFontReady","removeChild","compiledGlyphs","translatedData","FontFace","mimetype","getPathGenerator","character","cmds","current","js","cmd","__non_webpack_require__","Canvas","fs","process","nw","versions","electron","_storage","_modified","onSetModified","onResetModified","getOrCreateValue","defaultValue","setValue","_setModified","compatibilityParams","checkFontFace","_pattern_helper","addContextCurrentTransform","mozCurrentTransform","translate","setTransform","getCurrentTransform","_transformMatrix","getCurrentTransformInverse","f","ad_bc","bc_ad","ctxSave","old","_transformStack","_originalSave","ctxRestore","prev","pop","_originalRestore","ctxTranslate","_originalTranslate","ctxScale","_originalScale","ctxTransform","ctxSetTransform","ctxRotate","angle","cosValue","sinValue","_originalRotate","CachedCanvases","CachedCanvasesClosure","cache","getCanvas","CachedCanvases_getCanvas","trackTransform","canvasEntry","CanvasExtraState","CanvasExtraStateClosure","alphaIsShape","fontSize","fontSizeScale","textMatrix","IDENTITY_MATRIX","textMatrixScale","fontMatrix","FONT_IDENTITY_MATRIX","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","TextRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","resumeSMaskCtx","transferMaps","CanvasExtraState_clone","setCurrentPoint","CanvasExtraState_setCurrentPoint","CanvasGraphicsClosure","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","contentVisible","markedContentStack","cachedCanvases","_cachedGetSinglePixelWidth","putBinaryImageData","imgData","ImageData","destPos","j","thisChunkHeight","elemsInThisChunk","partialChunkHeight","fullChunks","totalChunks","chunkImgData","srcPos","dest","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","ImageKind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","mask","srcByte","hasTransferMaps","kind","putBinaryImageMask","elem","copyCtxState","sourceCtx","destCtx","properties","getLineDash","lineDashOffset","resetCtxToDefault","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","composeSMask","layerCtx","maskCtx","backdrop","isEnabled","genericComposeSMask","subtype","composeFn","hasBackdrop","chunkSize","row","chunkHeight","composed","layer","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","fillStyle","fillRect","transparentCanvas","compositeCtx","apply","beginLayout","CanvasGraphics_executeOperatorList","executionStartIdx","continueCallback","argsArrayLen","fnId","chunkOperations","endTime","steps","OPS","depObjId","objsPool","CanvasGraphics_endDrawing","drawImage","endLayout","CanvasGraphics_setLineWidth","CanvasGraphics_setLineCap","style","lineCap","CanvasGraphics_setLineJoin","lineJoin","CanvasGraphics_setMiterLimit","limit","miterLimit","CanvasGraphics_setDash","dashArray","dashPhase","CanvasGraphics_setGState","states","state","globalAlpha","globalCompositeOperation","suspendSMaskGroup","endSMaskGroup","beginSMaskGroup","CanvasGraphics_beginSMaskGroup","drawnWidth","drawnHeight","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","scaleY","mozCurrentTransformInverse","CanvasGraphics_endSMaskGroup","deltaTransform","resumeSMaskGroup","CanvasGraphics_resumeSMaskGroup","CanvasGraphics_save","CanvasGraphics_restore","CanvasGraphics_transform","CanvasGraphics_constructPath","ops","getSinglePixelWidth","xw","yh","CanvasGraphics_closePath","CanvasGraphics_stroke","consumePath","CanvasGraphics_closeStroke","CanvasGraphics_fill","needRestore","CanvasGraphics_eoFill","CanvasGraphics_fillStroke","CanvasGraphics_eoFillStroke","CanvasGraphics_closeFillStroke","CanvasGraphics_closeEOFillStroke","CanvasGraphics_endPath","CanvasGraphics_clip","CanvasGraphics_eoClip","CanvasGraphics_beginText","CanvasGraphics_endText","paths","pendingTextPaths","beginPath","path","CanvasGraphics_setCharSpacing","spacing","CanvasGraphics_setWordSpacing","CanvasGraphics_setHScale","CanvasGraphics_setLeading","CanvasGraphics_setFont","fontRefName","fontObj","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","CanvasGraphics_setTextRenderingMode","CanvasGraphics_setTextRise","rise","CanvasGraphics_moveText","CanvasGraphics_setLeadingMoveText","CanvasGraphics_setTextMatrix","CanvasGraphics_nextLine","paintChar","fillStrokeMode","isAddToPathSet","addToPath","patternTransform","isFontSubpixelAAEnabled","CanvasGraphics_showText","glyphs","showType3Text","fontDirection","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","scaledX","scaledY","scaledAccentX","scaledAccentY","restoreNeeded","isSpace","fontChar","accent","vmetric","vx","vy","measuredWidth","characterScaleX","isInFont","CanvasGraphics_showType3Text","spacingLength","operatorListId","transformed","CanvasGraphics_setCharWidth","xWidth","yWidth","CanvasGraphics_setCharWidthAndBounds","llx","lly","urx","ury","getColorN_Pattern","CanvasGraphics_getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","getShadingPatternFromIR","CanvasGraphics_setStrokeColorN","arguments","CanvasGraphics_setFillColorN","CanvasGraphics_setStrokeRGBColor","strokeStyle","CanvasGraphics_setFillRGBColor","CanvasGraphics_shadingFill","patternIR","inv","bl","br","ul","ur","x0","y0","x1","y1","CanvasGraphics_beginInlineImage","CanvasGraphics_beginImageData","CanvasGraphics_paintFormXObjectBegin","matrix","bbox","CanvasGraphics_paintFormXObjectEnd","CanvasGraphics_beginGroup","group","isolated","knockout","bounds","canvasBounds","scaleX","startTransformInverse","CanvasGraphics_endGroup","imageSmoothingEnabled","mozImageSmoothingEnabled","CanvasGraphics_beginAnnotations","CanvasGraphics_endAnnotations","CanvasGraphics_beginAnnotation","CanvasGraphics_endAnnotation","CanvasGraphics_paintImageMaskXObject","img","isPatternFill","COMPILE_TYPE3_GLYPHS","compileType3Glyph","j0","width1","points","POINT_TYPES","lineSize","data0","count","sum","Int32Array","outlines","pp","coords","p0","step","kk","ll","compiled","maskCanvas","skewX","skewY","positions","CanvasGraphics_paintImageMaskXObjectGroup","images","image","CanvasGraphics_paintImageXObject","CanvasGraphics_paintImageXObjectRepeat","map","w","h","CanvasGraphics_paintInlineImageXObject","imgToPaint","tmpCanvas","widthScale","heightScale","HTMLElement","tmpCtx","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","position","getCanvasPosition","appendImage","left","top","CanvasGraphics_paintInlineImageXObjectGroup","entry","CanvasGraphics_paintSolidColorImageMask","CanvasGraphics_markPoint","tag","CanvasGraphics_markPointProps","CanvasGraphics_beginMarkedContent","visible","CanvasGraphics_beginMarkedContentProps","isVisible","isContentVisible","CanvasGraphics_endMarkedContent","CanvasGraphics_beginCompat","CanvasGraphics_endCompat","CanvasGraphics_consumePath","inverse","CanvasGraphics_getCanvasPosition","CanvasGraphics_isContentVisible","op","raw","shadingIR","ShadingIRs","applyBoundingBox","Path2D","region","fromIR","RadialAxial_fromIR","colorStops","r1","getPattern","RadialAxial_getPattern","grad","createMeshCanvas","createMeshCanvasClosure","drawTriangle","c1","c2","c3","tmp","colors","rowSize","x2","y2","x3","y3","xa","car","cag","cab","xb","cbr","cbg","cbb","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","maxY","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","combinesScale","figures","backgroundColor","boundsWidth","boundsHeight","paddedWidth","BORDER_SIZE","paddedHeight","drawFigures","Mesh_fromIR","Mesh_getPattern","owner","matrixScale","temporaryPatternCanvas","Dummy_fromIR","Dummy_fromIR_getPattern","TilingPatternClosure","PaintType","xstep","ystep","paintType","tilingType","createPatternCanvas","TilinPattern_createPatternCanvas","curMatrixScale","combinedScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","clipBbox","TilingPattern_getSizeAndScale","realOutputSize","maxSize","bboxWidth","bboxHeight","cssColor","TilingPattern_getPattern","CallbackKind","StreamKind","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","action","cbSourceName","cbTargetName","_createStreamSink","ah","actionName","handler","send","_postMessage","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","queueingStrategy","self","streamSink","enqueue","isCancelled","lastDesiredSize","sinkCapability","ready","onPull","onCancel","success","_deleteStreamController","allSettled","_xml_parser","_repair","xmlDocument","SimpleXMLParser","parser","_metadataMap","_parse","codes","d1","d2","d3","chars","substring","rdf","firstChild","nextSibling","nodeName","hasChildNodes","children","childNodes","jj","toLowerCase","trim","XMLParserErrorCode","isWhitespace","ch","SimpleDOMNode","nodeValue","parentNode","child","join","searchNode","component","stack","node","parent","siblingPos","currentPos","newPos","dump","attributes","attribute","XMLParserBase","_resolveEntities","onResolveEntity","_parseContent","skipWs","attrName","attrValue","attrEndChar","attrEndIndex","parsed","_parseProcessingInstruction","attrStart","parseXml","onError","onEndElement","pi","onPi","onComment","onCdata","q2","complexDoctype","doctypeContent","onDoctype","content","onBeginElement","onText","hasAttributes","_currentFragment","_stack","_errorCode","_hasAttributes","parseFromString","isWhitespaceString","isEmpty","lastElement","OptionalContentGroup","creator","_order","_groups","order","groups","off","expression","policy","ids","setVisibility","getOrder","keys","getGroups","getGroup","_queuedChunks","_progressiveDone","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","some","_progressiveDataLength","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","readers","_stream","_done","_filename","_requests","_headersReady","requestCapability","headersReady","_begin","_end","_queuedChunk","requestsCapability","_enabled","WebGLUtils","tryInitGL","WebGLUtilsClosure","loadShader","gl","shaderType","shader","COMPILE_STATUS","errorMsg","createVertexShader","VERTEX_SHADER","createFragmentShader","FRAGMENT_SHADER","createProgram","shaders","program","LINK_STATUS","createTexture","textureId","texture","CLAMP_TO_EDGE","NEAREST","currentGL","currentCanvas","generateGL","premultipliedalpha","smaskCache","figuresCache","initSmaskGL","texCoordLocation","texLayerLocation","texMaskLocation","texCoordBuffer","createBuffer","Float32Array","STATIC_DRAW","drawingBufferHeight","TEXTURE0","maskTexture","TEXTURE1","positionLocation","BLEND","ONE_MINUS_SRC_ALPHA","COLOR_BUFFER_BIT","flush","initFiguresGL","coordsMap","colorsMap","pIndex","cIndex","col","coordsBuffer","colorsBuffer","colorLocation","AnnotationElementFactory","parameters","annotationType","AnnotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","linkService","downloadManager","imageResourcesPath","svgFactory","container","_createContainer","normalizeRect","AnnotationBorderStyleType","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","_createPopup","trigger","popup","PopupElement","title","modificationDate","contents","hideWrapper","className","externalLinkTarget","externalLinkRel","externalLinkEnabled","_bindNamedAction","_bindLink","getDestinationHash","destination","navigateTo","getAnchorUrl","executeNamedAction","hasPopup","JSON","hasAppearance","fieldValue","TEXT_ALIGNMENT","storage","multiLine","readOnly","fieldName","maxLen","comb","combWidth","_setTextStyle","textAlignment","fontFamily","checked","buttonValue","radio","selectElement","combo","options","multiSelect","option","optionElement","displayValue","exportValue","includes","IGNORE_TYPES","parentType","selector","parentId","parentElement","querySelector","parentTop","parseFloat","popupLeft","transformOrigin","pinned","hideElement","setAttribute","BACKGROUND_ENLIGHT","dateObject","stringify","toLocaleDateString","toLocaleTimeString","_formatContents","_toggle","_show","_hide","lines","line","pin","hasAttribute","removeAttribute","zIndex","unpin","append","borderWidth","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","file","eventBus","dispatch","_download","downloadData","AnnotationLayer","sortedAnnotations","popupAnnotations","annotations","renderTextLayer","renderTextLayerClosure","NonWhitespaceRegexp","appendText","geom","textDiv","textDivProperties","canvasWidth","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","isAllWhitespace","tx","fontName","fontHeight","fontAscent","ascent","descent","_fontInspectorEnabled","PI","shouldScaleText","absScaleX","absScaleY","_textContentStream","_enhanceTextSelection","angleCos","angleSin","divWidth","divHeight","getAxialAlignedBoundingBox","right","bottom","_canceled","textDivs","_textDivs","textDivsLength","findPositiveMin","ts","expand","_bounds","_viewport","expanded","expandBounds","boxes","box","x1New","x2New","expandBoundsLTR","divProperties","Float64Array","boxScale","horizon","Infinity","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","used","concat","TextLayerRenderTask","textContentStream","textContentItemsStr","enhanceTextSelection","_textContent","_container","_textContentItemsStr","FontInspector","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_textDivProperties","_renderingDone","_renderTimer","TextLayer_cancel","_processItems","len","styleCache","_layoutText","measureText","_render","TextLayer_render","timeout","textItems","textStyles","expandTextDivs","TextLayer_expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","renderParameters","SVGGraphics","SVG_DEFAULTS","fontStyle","fontWeight","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","crcTable","writePngChunk","crc","crc32","deflateSync","literals","deflateSyncUncompressed","deflateBlocks","idat","adler","adler32","isMask","encode","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","CHUNK_WRAPPER_SIZE","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","pf","pm","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opList","fn","opListToTree","opTree","opListElement","opTreeElement","tspan","charWidth","lineWidthScale","_setStrokeAttributes","txtElement","_ensureTransformGroup","addFontStyle","setAttributeNS","defs","setStrokeAlpha","setFillAlpha","xcoords","ycoords","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","colorStop","stop","clipId","clipPath","clipElement","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","_network_utils","NetworkManager","isHttp","test","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhr","xhrId","pendingRequest","onStateChange","onHeadersReceived","onDone","xhrStatus","expectedStatus","getArrayBuffer","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","_source","_manager","_rangeChunkSize","_rangeRequestReaders","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","manager","_onHeadersReceived","_onDone","_onError","_url","_fullRequestId","_headersReceivedCapability","_disableRange","_cachedChunks","_storedError","fullRequestXhrId","fullRequestXhr","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","createResponseStatusError","_requestId","onClosed","_close","contentDisposition","getFilenameFromContentDispositionHeader","returnValues","validateResponseStatus","_content_disposition","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","contentDispositionStr","iter","quot","part","parts","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","from","err","quotindex","extvalue","encodingend","langvalue","charset","hex","createFetchOptions","headers","abortController","method","signal","credentials","redirect","createHeaders","Headers","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","_headersCapability","AbortController","_abortController","_headers","_readCapability"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __w_pdfjs_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__w_pdfjs_require__.m = modules;\n\n \t// expose the module cache\n \t__w_pdfjs_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__w_pdfjs_require__.d = function(exports, name, getter) {\n \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__w_pdfjs_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__w_pdfjs_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __w_pdfjs_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__w_pdfjs_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __w_pdfjs_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__w_pdfjs_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__w_pdfjs_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  isFetchSupported,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\n// modified by ngx-extended-pdf-viewer\n// import { apiCompatibilityParams } from \"./display/api_compatibility.js\";\n// end of modification\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n  setPDFNetworkStreamFactory(params => {\n    return streamsPromise.then(streams => {\n      const [{ PDFNetworkStream }, { PDFFetchStream }] = streams;\n      if (isFetchSupported() && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  });\n} else if (PDFJSDev.test(\"GENERIC\")) {\n  // modified by ngx-extended-pdf-viewer - removed node.js support\n  const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n  let PDFFetchStream;\n  if (isFetchSupported()) {\n    PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n    // modified by ngx-extended-pdf-viewer - removed node.js support\n  }\n  setPDFNetworkStreamFactory(params => {\n    if (PDFFetchStream && isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./shared/util.js\":\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // modified by ngx-extended-pdf-viewer - removed node.js support\n  // apiCompatibilityParams,\n  // end of modification\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  BaseException,\n  CMapCompressionType,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    unreachable(\"Abstract method `create` called.\");\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n}\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context,\n    };\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (isFetchSupported() && isValidFetchUrl(url, document.baseURI))\n    ) {\n      return fetch(url).then(async response => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        let cMapData;\n        if (this.isCompressed) {\n          cMapData = new Uint8Array(await response.arrayBuffer());\n        } else {\n          cMapData = stringToBytes(await response.text());\n        }\n        return { cMapData, compressionType };\n      });\n    }\n\n    // The Fetch API is not supported.\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n\n      if (this.isCompressed) {\n        request.responseType = \"arraybuffer\";\n      }\n      request.onreadystatechange = () => {\n        if (request.readyState !== XMLHttpRequest.DONE) {\n          return;\n        }\n        if (request.status === 200 || request.status === 0) {\n          let cMapData;\n          if (this.isCompressed && request.response) {\n            cMapData = new Uint8Array(request.response);\n          } else if (!this.isCompressed && request.responseText) {\n            cMapData = stringToBytes(request.responseText);\n          }\n          if (cMapData) {\n            resolve({ cMapData, compressionType });\n            return;\n          }\n        }\n        reject(new Error(request.statusText));\n      };\n\n      request.send(null);\n    });\n  }\n}\n\nclass DOMSVGFactory {\n  create(width, height) {\n    assert(width > 0 && height > 0, \"Invalid SVG dimensions\");\n\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n    return svg;\n  }\n\n  createElement(type) {\n    assert(typeof type === \"string\", \"Invalid SVG element type\");\n\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\n/**\n * Gets the file name from a given URL.\n * @param {string} url\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isFetchSupported() {\n  return (\n    typeof fetch !== \"undefined\" &&\n    typeof Response !== \"undefined\" &&\n    \"body\" in Response.prototype &&\n    typeof ReadableStream !== \"undefined\"\n  );\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @returns {Promise<void>}\n */\nfunction loadScript(src) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = resolve;\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\nexport {\n  PageViewport,\n  RenderingCancelledException,\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  DEFAULT_LINK_REL,\n  BaseCanvasFactory,\n  DOMCanvasFactory,\n  BaseCMapReaderFactory,\n  DOMCMapReaderFactory,\n  DOMSVGFactory,\n  StatTimer,\n  isFetchSupported,\n  isValidFetchUrl,\n  loadScript,\n  deprecated,\n  PDFDateString,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n\nclass Util {\n  // makeCssRgb() can be called thousands of times. Using ´rgbBuf` avoids\n  // creating many intermediate strings.\n  static makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join(\"\");\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\n// prettier-ignore\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014,\n  0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C,\n  0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160,\n  0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([\\(\\)\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  return arr1.every(function (element, index) {\n    return element === arr2[index];\n  });\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nconst createObjectURL = (function createObjectURLClosure() {\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  // eslint-disable-next-line no-shadow\n  return function createObjectURL(data, contentType, forceDataSchema = false) {\n    if (!forceDataSchema && URL.createObjectURL) {\n      const blob = new Blob([data], { type: contentType });\n      return URL.createObjectURL(blob);\n    }\n\n    let buffer = `data:${contentType};base64,`;\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n        d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n})();\n\nconst XMLEntities = {\n  /* < */ 0x3c: \"&lt;\",\n  /* > */ 0x3e: \"&gt;\",\n  /* & */ 0x26: \"&amp;\",\n  /* \" */ 0x22: \"&quot;\",\n  /* ' */ 0x27: \"&apos;\",\n};\n\nfunction encodeToXmlString(str) {\n  const buffer = [];\n  let start = 0;\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.codePointAt(i);\n    if (0x20 <= char && char <= 0x7e) {\n      // ascii\n      const entity = XMLEntities[char];\n      if (entity) {\n        if (start < i) {\n          buffer.push(str.substring(start, i));\n        }\n        buffer.push(entity);\n        start = i + 1;\n      }\n    } else {\n      if (start < i) {\n        buffer.push(str.substring(start, i));\n      }\n      buffer.push(`&#x${char.toString(16).toUpperCase()};`);\n      if (char > 0xd7ff && (char < 0xe000 || char > 0xfffd)) {\n        // char is represented by two u16\n        i++;\n      }\n      start = i + 1;\n    }\n  }\n\n  if (buffer.length === 0) {\n    return str;\n  }\n\n  if (start < str.length) {\n    buffer.push(str.substring(start, str.length));\n  }\n\n  return buffer.join(\"\");\n}\n\nexport {\n  BaseException,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  OPS,\n  VerbosityLevel,\n  UNSUPPORTED_FEATURES,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  FontType,\n  ImageKind,\n  CMapCompressionType,\n  AbortException,\n  InvalidPDFException,\n  MissingPDFException,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  StreamType,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  Util,\n  FormatError,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  bytesToString,\n  createPromiseCapability,\n  createObjectURL,\n  escapeString,\n  encodeToXmlString,\n  getModificationDate,\n  getVerbosityLevel,\n  info,\n  isArrayBuffer,\n  isArrayEqual,\n  isBool,\n  isNum,\n  isString,\n  isSameOrigin,\n  createValidAbsoluteUrl,\n  IsLittleEndianCached,\n  IsEvalSupportedCached,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF8String,\n  utf8StringToString,\n  warn,\n  unreachable,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport { NodeCanvasFactory, NodeCMapReaderFactory } from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { apiCompatibilityParams } from \"./api_compatibility.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { WebGLContext } from \"./webgl.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n// #171 receive options from ngx-extended-pdf-viewer\nconst ServiceWorkerOptions = {\n  showUnverifiedSignatures: false,\n};\n\nwindow.ServiceWorkerOptions = ServiceWorkerOptions;\n// #171 end\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via `@font-face` rules. If disabled, fonts will\n *   be rendered using a built-in font renderer that constructs the glyphs with\n *   primitive path commands. The default value is `false`.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * @typedef {Object} PDFDocumentStats\n * @property {Object<string, boolean>} streamTypes - Used stream types in the\n *   document (an item is set to true if specific stream ID was used in the\n *   document).\n * @property {Object<string, boolean>} fontTypes - Used font types in the\n *   document (an item is set to true if specific font ID was used in the\n *   document).\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|TypedArray|DocumentInitParameters|PDFDataRangeTransport} src -\n *   Can be a URL to where a PDF file is located, a typed array (Uint8Array)\n *   already populated with data or parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\") {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either Uint8Array, string or a parameter object\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    if (key === \"url\" && typeof window !== \"undefined\") {\n      // The full path is required in the 'url' field.\n      params[key] = new URL(source[key], window.location).href;\n      continue;\n    } else if (key === \"range\") {\n      rangeTransport = source[key];\n      continue;\n    } else if (key === \"worker\") {\n      worker = source[key];\n      continue;\n    } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n      // Converting string or array-like data to Uint8Array.\n      const pdfBytes = source[key];\n      if (typeof pdfBytes === \"string\") {\n        params[key] = stringToBytes(pdfBytes);\n      } else if (\n        typeof pdfBytes === \"object\" &&\n        pdfBytes !== null &&\n        !isNaN(pdfBytes.length)\n      ) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else if (isArrayBuffer(pdfBytes)) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else {\n        throw new Error(\n          \"Invalid PDF binary data: either typed array, \" +\n            \"string or array-like object is expected in the \" +\n            \"data property.\"\n        );\n      }\n      continue;\n    }\n    params[key] = source[key];\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = apiCompatibilityParams.disableFontFace || false;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          // #171 receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\n            \"showUnverifiedSignatures\",\n            window.ServiceWorkerOptions.showUnverifiedSignatures\n          );\n          // #171 end of receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise} A promise that is resolved when the worker ID of the\n *   `MessageHandler` is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n    })\n    .then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n *\n * @typedef {Object} PDFDocumentLoadingTask\n * @property {string} docId - Unique identifier for the document loading task.\n * @property {boolean} destroyed - Whether the loading task is destroyed or not.\n * @property {function} [onPassword] - Callback to request a password if a wrong\n *   or no password was provided. The callback receives two parameters: a\n *   function that should be called with the new password, and a reason (see\n *   {@link PasswordResponses}).\n * @property {function} [onProgress] - Callback to be able to monitor the\n *   loading progress of the PDF file (necessary to implement e.g. a loading\n *   bar). The callback receives an {Object} with the properties `loaded`\n *   ({number}) and `total` ({number}) that indicate how many bytes are loaded.\n * @property {function} [onUnsupportedFeature] - Callback for when an\n *   unsupported feature is used in the PDF document. The callback receives an\n *   {@link UNSUPPORTED_FEATURES} argument.\n * @property {Promise<PDFDocumentProxy>} promise - Promise for document loading\n *   task completion.\n * @property {function} destroy - Abort all network requests and destroy\n *   the worker. Returns a promise that is resolved when destruction is\n *   completed.\n */\n\n/**\n * @type {any}\n * @ignore\n */\nconst PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  /**\n   * The loading task controls the operations required to load a PDF document\n   * (such as network requests) and provides a way to listen for completion,\n   * after which individual pages can be rendered.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = createPromiseCapability();\n      this._transport = null;\n      this._worker = null;\n\n      /**\n       * Unique identifier for the document loading task.\n       * @type {string}\n       */\n      this.docId = \"d\" + nextDocumentId++;\n\n      /**\n       * Whether the loading task is destroyed or not.\n       * @type {boolean}\n       */\n      this.destroyed = false;\n\n      /**\n       * Callback to request a password if a wrong or no password was provided.\n       * The callback receives two parameters: a function that should be called\n       * with the new password, and a reason (see {@link PasswordResponses}).\n       * @type {function}\n       */\n      this.onPassword = null;\n\n      /**\n       * Callback to be able to monitor the loading progress of the PDF file\n       * (necessary to implement e.g. a loading bar). The callback receives\n       * an {Object} with the properties `loaded` ({number}) and `total`\n       * ({number}) that indicate how many bytes are loaded.\n       * @type {function}\n       */\n      this.onProgress = null;\n\n      /**\n       * Callback for when an unsupported feature is used in the PDF document.\n       * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n       * @type {function}\n       */\n      this.onUnsupportedFeature = null;\n    }\n\n    /**\n     * Promise for document loading task completion.\n     * @type {Promise<PDFDocumentProxy>}\n     */\n    get promise() {\n      return this._capability.promise;\n    }\n\n    /**\n     * @returns {Promise<void>} A promise that is resolved when destruction is\n     *   completed.\n     */\n    destroy() {\n      this.destroyed = true;\n\n      const transportDestroyed = !this._transport\n        ? Promise.resolve()\n        : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      });\n    }\n  }\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   */\n  constructor(length, initialData, progressiveDone = false) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {string} A (not guaranteed to be) unique ID to identify a PDF.\n   */\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {{num: number, gen: number}} ref - The page reference. Must have\n   *   the `num` and `gen` properties.\n   * @returns {Promise<{num: number, gen: number}>} A promise that is resolved\n   *   with the page index (starting from zero) that is associated with the\n   *   reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any>>} A promise that is resolved with all\n   *   information of the given named destination.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @returns {Promise<PDFDocumentStats>} A promise this is resolved with\n   *   current statistics about document structures (see\n   *   {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup() {\n    return this._transport.startCleanup();\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are either needed in the viewer and/or\n   *   whose default values may be affected by the `apiCompatibilityParams`.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @param {AnnotationStorage} annotationStorage - Storage for annotation\n   *   data in forms.\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument(annotationStorage) {\n    return this._transport.saveDocument(annotationStorage);\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - Replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem>} items - Array of {@link TextItem} objects.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} intent - Determines the annotations that will be fetched,\n *   can be either 'display' (viewable annotations) or 'print' (printable\n *   annotations). If the parameter is omitted, all annotations are fetched.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'.\n *   The default value is 'display'.\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering for\n *   some operations. The default value is `false`.\n * @property {boolean} [renderInteractiveForms] - Whether or not interactive\n *   form elements are rendered in the display layer. If so, we do not render\n *   them on the canvas as well.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {AnnotationStorage} [annotationStorage] - Storage for annotation\n *   data in forms.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {Object} The reference that points to this page. It has `num` and\n   *   `gen` properties.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = null } = {}) {\n    if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n      this.annotationsPromise = this._transport.getAnnotations(\n        this._pageIndex,\n        intent\n      );\n      this.annotationsIntent = intent;\n    }\n    return this.annotationsPromise;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    enableWebGL = false,\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    annotationStorage = null,\n    optionalContentConfigPromise = null,\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const webGLContext = new WebGLContext({\n      enable: enableWebGL,\n    });\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true,\n        annotationStorage:\n          (annotationStorage && annotationStorage.getAll()) || null,\n      });\n    }\n\n    const complete = error => {\n      const i = intentState.renderTasks.indexOf(internalRenderTask);\n      if (i >= 0) {\n        intentState.renderTasks.splice(i, 1);\n      }\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      webGLContext,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug,\n    });\n\n    if (!intentState.renderTasks) {\n      intentState.renderTasks = [];\n    }\n    intentState.renderTasks.push(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents page's operator list.\n   */\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        const i = intentState.renderTasks.indexOf(opListTask);\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      intentState.renderTasks = [];\n      intentState.renderTasks.push(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    for (const [intent, intentState] of this._intentStates) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent === \"oplist\") {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this.annotationsPromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.length !== 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this.annotationsPromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this._intentStates.get(intent);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (let i = 0; i < intentState.renderTasks.length; i++) {\n      intentState.renderTasks[i].operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(args.intent);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (let i = 0; i < intentState.renderTasks.length; i++) {\n              intentState.renderTasks[i].operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.length !== 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(\n      new AbortException(reason && reason.message)\n    );\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [intent, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(intent);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor(defer = true) {\n    this._listeners = [];\n    this._defer = defer;\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        const transferable = transfers && transfers.includes(buffer);\n        if (transferable) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      result = Array.isArray(value) ? [] : {};\n      cloned.set(value, result); // adding to cache now for cyclic references\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n            throw new Error(\n              `LoopbackPort.postMessage - cannot clone: ${value[i]}`\n            );\n          }\n          continue;\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    if (!this._defer) {\n      this._listeners.forEach(listener => {\n        listener.call(this, { data: obj });\n      });\n      return;\n    }\n\n    const cloned = new WeakMap();\n    const e = { data: cloneValue(obj) };\n    this._deferred.then(() => {\n      this._listeners.forEach(listener => {\n        listener.call(this, e);\n      });\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {@link VerbosityLevel} should be used.\n */\n\n/** @type {any} */\nconst PDFWorker = (function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n    // eslint-disable-next-line no-undef\n    if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n      // Workers aren't supported in Node.js, force-disabling them there.\n      isWorkerDisabled = true;\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\")) {\n        fallbackWorkerSrc = \"../pdf.worker.js\";\n      } else {\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      }\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath =\n        document.currentScript && document.currentScript.src;\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(\n          /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n          \".worker$1$2\"\n        );\n      }\n    }\n  }\n\n  function getWorkerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      // modified by ngx-extended-pdf-viewer #376\n      if (GlobalWorkerOptions.workerSrc.constructor.name === \"Function\") {\n        return GlobalWorkerOptions.workerSrc();\n      }\n      // end of modification\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n    try {\n      mainWorkerMessageHandler =\n        globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n    } catch (ex) {\n      /* Ignore errors. */\n    }\n    return mainWorkerMessageHandler || null;\n  }\n\n  // Loads worker code into main thread.\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n    fakeWorkerCapability = createPromiseCapability();\n\n    const loader = async function () {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        if (typeof SystemJS !== \"object\") {\n          // Manually load SystemJS, since it's only necessary for fake workers.\n          await loadScript(\"../node_modules/systemjs/dist/system.js\");\n          await loadScript(\"../systemjs.config.js\");\n        }\n        const worker = await SystemJS.import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  /**\n   * PDF.js web worker abstraction that controls the instantiation of PDF\n   * documents. Message handlers are used to pass information from the main\n   * thread to the worker thread and vice versa. If the creation of a web\n   * worker is not possible, a \"fake\" worker will be used instead.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFWorker {\n    /**\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\n     */\n    constructor({\n      name = null,\n      port = null,\n      verbosity = getVerbosityLevel(),\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n\n      this._readyCapability = createPromiseCapability();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n        this._initializeFromPort(port);\n        return;\n      }\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n      this._messageHandler.on(\"ready\", function () {\n        // Ignoring 'ready' event -- MessageHandler shall be already initialized\n        // and ready to accept the messages.\n      });\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      // If worker support isn't disabled explicit and the browser has worker\n      // support, create a new web worker and test if it/the browser fulfills\n      // all requirements to run parts of pdf.js in a web worker.\n      // Right now, the requirement is, that an Uint8Array is still an\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n      if (\n        typeof Worker !== \"undefined\" &&\n        !isWorkerDisabled &&\n        !getMainThreadWorkerMessageHandler()\n      ) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          // Wraps workerSrc path into blob URL, if the former does not belong\n          // to the same origin.\n          if (\n            typeof PDFJSDev !== \"undefined\" &&\n            PDFJSDev.test(\"GENERIC\") &&\n            !isSameOrigin(window.location.href, workerSrc)\n          ) {\n            workerSrc = createCDNWrapper(\n              new URL(workerSrc, window.location).href\n            );\n          }\n\n          // Some versions of FF can't create a worker on localhost, see:\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n          const worker = new Worker(workerSrc);\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              // Fall back to fake worker if the termination is caused by an\n              // error (e.g. NetworkError / SecurityError).\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              // Worker failed to initialize due to an error. Clean up and fall\n              // back to the fake worker.\n              terminateEarly();\n            }\n          };\n          worker.addEventListener(\"error\", onWorkerError);\n\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            if (data) {\n              // supportTypedArray\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n              this._readyCapability.resolve();\n              // Send global setting, e.g. verbosity level.\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity,\n              });\n            } else {\n              this._setupFakeWorker();\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            try {\n              sendTest();\n            } catch (e) {\n              // We need fallback to a faked worker.\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([\n              this.postMessageTransfers ? 255 : 0,\n            ]);\n            // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n            // typed array. Also, checking if we can use transfers.\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              warn(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          // It might take time for worker to initialize (especially when AMD\n          // loader is used). We will try to send test immediately, and then\n          // when 'ready' message will arrive. The worker shall process only\n          // first received 'test'.\n          sendTest();\n          return;\n        } catch (e) {\n          info(\"The worker has been disabled.\");\n        }\n      }\n      // Either workers are disabled, not supported or have thrown an exception.\n      // Thus, we fallback to a faked worker.\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        warn(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal()\n        .then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          const port = new LoopbackPort();\n          this._port = port;\n\n          // All fake workers use the same port, making id unique.\n          const id = \"fake\" + nextFakeWorkerId++;\n\n          // If the main thread is our worker, setup the handling for the\n          // messages -- the main thread sends to it self.\n          const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n\n          const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n          this._readyCapability.resolve();\n          // Send global setting, e.g. verbosity level.\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity,\n          });\n        })\n        .catch(reason => {\n          this._readyCapability.reject(\n            new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n          );\n        });\n    }\n\n    /**\n     * Destroys the worker instance.\n     */\n    destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }\n\n    /**\n     * @param {PDFWorkerParameters} params - The worker initialization\n     *   parameters.\n     */\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n  }\n  return PDFWorker;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n    });\n    this._params = params;\n    // modified by ngx-extended-pdf-viewer #376\n    let cMapUrl = params.cMapUrl;\n    if (cMapUrl.constructor.name === \"Function\") {\n      cMapUrl = cMapUrl();\n    }\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: cMapUrl,\n      isCompressed: params.cMapPacked,\n    });\n    // end of modification\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    this.pageCache.forEach(function (page) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    });\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    Promise.all(waitOn).then(() => {\n      this.fontLoader.clear();\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (!(reason instanceof Error)) {\n        const msg = \"DocException - expected a valid Error.\";\n        if (\n          typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ) {\n          unreachable(msg);\n        } else {\n          warn(msg);\n        }\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (\n            params.pdfBug &&\n            globalThis.FontInspector &&\n            globalThis.FontInspector.enabled\n          ) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (\n            imageData &&\n            \"data\" in imageData &&\n            imageData.data.length > MAX_IMAGE_SIZE_TO_STORE\n          ) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n        fetched = true;\n\n        this.CMapReaderFactory.fetch(data)\n          .then(function (builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          })\n          .catch(function (reason) {\n            sink.error(reason);\n          });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument(annotationStorage) {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        numPages: this._numPages,\n        annotationStorage:\n          (annotationStorage && annotationStorage.getAll()) || null,\n        filename: this._fullReader ? this._fullReader.filename : null,\n      })\n      .finally(() => {\n        if (annotationStorage) {\n          annotationStorage.resetModified();\n        }\n      });\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader\n            ? this._fullReader.filename\n            : null,\n        };\n      });\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  startCleanup() {\n    return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n      for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n        const page = this.pageCache[i];\n        if (page) {\n          const cleanupSuccessful = page.cleanup();\n\n          if (!cleanupSuccessful) {\n            throw new Error(\n              `startCleanup: Page ${i + 1} is currently rendering.`\n            );\n          }\n        }\n      }\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n    });\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableFontFace: params.disableFontFace,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj ? obj.resolved : false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nconst InternalRenderTask = (function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  // eslint-disable-next-line no-shadow\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      webGLContext,\n      useRequestAnimationFrame = false,\n      pdfBug = false,\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this._pdfBug = pdfBug;\n\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame =\n        useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = createPromiseCapability();\n      this.task = new RenderTask(this);\n      // caching this-bound methods\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    get completed() {\n      return this.capability.promise.catch(function () {\n        // Ignoring errors, since we only want to know when rendering is\n        // no longer pending.\n      });\n    }\n\n    initializeGraphics({ transparency = false, optionalContentConfig }) {\n      if (this.cancelled) {\n        return;\n      }\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\n            \"Cannot use the same canvas during multiple render() operations. \" +\n              \"Use different canvas or ensure previous operations were \" +\n              \"cancelled or completed.\"\n          );\n        }\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (\n        this._pdfBug &&\n        globalThis.StepperManager &&\n        globalThis.StepperManager.enabled\n      ) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n      const {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      } = this.params;\n\n      this.gfx = new CanvasGraphics(\n        canvasContext,\n        this.commonObjs,\n        this.objs,\n        this.canvasFactory,\n        this.webGLContext,\n        imageLayer,\n        optionalContentConfig\n      );\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background,\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n      this.callback(\n        error ||\n          new RenderingCancelledException(\n            `Rendering cancelled, page ${this._pageIndex + 1}`,\n            \"canvas\"\n          )\n      );\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this.cancel.bind(this));\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(\n        this.operatorList,\n        this.operatorListIdx,\n        this._continueBound,\n        this.stepper\n      );\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback();\n        }\n      }\n    }\n  }\n  return InternalRenderTask;\n})();\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  setPDFNetworkStreamFactory,\n  version,\n  build,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    this.nativeFontFaces.forEach(nativeFontFace => {\n      this._document.fonts.delete(nativeFontFace);\n    });\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const supported =\n      typeof this._document !== \"undefined\" && !!this._document.fonts;\n    return shadow(this, \"isFontLoadingAPISupported\", supported);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m && m[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (i = 0, ii = fonts.length; i < ii; i++) {\n        names.push(fonts[i].loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (i = 0, ii = names.length; i < ii; ++i) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = names[i];\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        this._document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature = null,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(new Uint8Array(this.data));\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds, current;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      if (this._onUnsupportedFeature) {\n        this._onUnsupportedFeature({\n          featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n        });\n      }\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      let args,\n        js = \"\";\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.args !== undefined) {\n          args = current.args.join(\",\");\n        } else {\n          args = \"\";\n        }\n        js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\"c\", \"size\", js));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n/* eslint no-var: error */\n\nimport { BaseCanvasFactory, BaseCMapReaderFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    create(width, height) {\n      if (width <= 0 || height <= 0) {\n        throw new Error(\"Invalid canvas size\");\n      }\n      const Canvas = __non_webpack_require__(\"canvas\");\n      const canvas = Canvas.createCanvas(width, height);\n      return {\n        canvas,\n        context: canvas.getContext(\"2d\"),\n      };\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return new Promise((resolve, reject) => {\n        const fs = __non_webpack_require__(\"fs\");\n        fs.readFile(url, (error, data) => {\n          if (error || !data) {\n            reject(new Error(error));\n            return;\n          }\n          resolve({ cMapData: new Uint8Array(data), compressionType });\n        });\n      });\n    }\n  };\n}\n\nexport { NodeCanvasFactory, NodeCMapReaderFactory };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable efffects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists\n   * or store and return the default value\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  getOrCreateValue(key, defaultValue) {\n    if (this._storage.has(key)) {\n      return this._storage.get(key);\n    }\n\n    this._storage.set(key, defaultValue);\n    return defaultValue;\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} value\n   */\n  setValue(key, value) {\n    if (this._storage.get(key) !== value) {\n      this._setModified();\n    }\n    this._storage.set(key, value);\n  }\n\n  getAll() {\n    if (this._storage.size === 0) {\n      return null;\n    }\n    return Object.fromEntries(this._storage);\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n}\n\nexport { AnnotationStorage };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // Support: Node.js\n  (function checkFontFace() {\n    // Node.js is missing native support for `@font-face`.\n    if (isNodeJS) {\n      compatibilityParams.disableFontFace = true;\n    }\n  })();\n}\nconst apiCompatibilityParams = Object.freeze(compatibilityParams);\n\nexport { apiCompatibilityParams };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPatternFromIR, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n\n// Minimal font size that would be used during canvas fillText operations.\nvar MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nvar MAX_FONT_SIZE = 100;\nvar MAX_GROUP_SIZE = 4096;\n\n// Heuristic value used when enforcing minimum line widths.\nvar MIN_WIDTH_FACTOR = 0.65;\n\nvar COMPILE_TYPE3_GLYPHS = true;\nvar MAX_SIZE_TO_COMPILE = 1000;\n\nvar FULL_CHUNK_HEIGHT = 16;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (!ctx.mozCurrentTransform) {\n    ctx._originalSave = ctx.save;\n    ctx._originalRestore = ctx.restore;\n    ctx._originalRotate = ctx.rotate;\n    ctx._originalScale = ctx.scale;\n    ctx._originalTranslate = ctx.translate;\n    ctx._originalTransform = ctx.transform;\n    ctx._originalSetTransform = ctx.setTransform;\n\n    ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n    ctx._transformStack = [];\n\n    Object.defineProperty(ctx, \"mozCurrentTransform\", {\n      get: function getCurrentTransform() {\n        return this._transformMatrix;\n      },\n    });\n\n    Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n      get: function getCurrentTransformInverse() {\n        // Calculation done using WolframAlpha:\n        // http://www.wolframalpha.com/input/?\n        //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n        var m = this._transformMatrix;\n        var a = m[0],\n          b = m[1],\n          c = m[2],\n          d = m[3],\n          e = m[4],\n          f = m[5];\n\n        var ad_bc = a * d - b * c;\n        var bc_ad = b * c - a * d;\n\n        return [\n          d / ad_bc,\n          b / bc_ad,\n          c / bc_ad,\n          a / ad_bc,\n          (d * e - c * f) / bc_ad,\n          (b * e - a * f) / ad_bc,\n        ];\n      },\n    });\n\n    ctx.save = function ctxSave() {\n      var old = this._transformMatrix;\n      this._transformStack.push(old);\n      this._transformMatrix = old.slice(0, 6);\n\n      this._originalSave();\n    };\n\n    ctx.restore = function ctxRestore() {\n      var prev = this._transformStack.pop();\n      if (prev) {\n        this._transformMatrix = prev;\n        this._originalRestore();\n      }\n    };\n\n    ctx.translate = function ctxTranslate(x, y) {\n      var m = this._transformMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n\n      this._originalTranslate(x, y);\n    };\n\n    ctx.scale = function ctxScale(x, y) {\n      var m = this._transformMatrix;\n      m[0] = m[0] * x;\n      m[1] = m[1] * x;\n      m[2] = m[2] * y;\n      m[3] = m[3] * y;\n\n      this._originalScale(x, y);\n    };\n\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * a + m[2] * b,\n        m[1] * a + m[3] * b,\n        m[0] * c + m[2] * d,\n        m[1] * c + m[3] * d,\n        m[0] * e + m[2] * f + m[4],\n        m[1] * e + m[3] * f + m[5],\n      ];\n\n      ctx._originalTransform(a, b, c, d, e, f);\n    };\n\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n      this._transformMatrix = [a, b, c, d, e, f];\n\n      ctx._originalSetTransform(a, b, c, d, e, f);\n    };\n\n    ctx.rotate = function ctxRotate(angle) {\n      var cosValue = Math.cos(angle);\n      var sinValue = Math.sin(angle);\n\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * cosValue + m[2] * sinValue,\n        m[1] * cosValue + m[3] * sinValue,\n        m[0] * -sinValue + m[2] * cosValue,\n        m[1] * -sinValue + m[3] * cosValue,\n        m[4],\n        m[5],\n      ];\n\n      this._originalRotate(angle);\n    };\n  }\n}\n\nvar CachedCanvases = (function CachedCanvasesClosure() {\n  // eslint-disable-next-line no-shadow\n  function CachedCanvases(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n  CachedCanvases.prototype = {\n    getCanvas: function CachedCanvases_getCanvas(\n      id,\n      width,\n      height,\n      trackTransform\n    ) {\n      var canvasEntry;\n      if (this.cache[id] !== undefined) {\n        canvasEntry = this.cache[id];\n        this.canvasFactory.reset(canvasEntry, width, height);\n        // reset canvas transform for emulated mozCurrentTransform, if needed\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        canvasEntry = this.canvasFactory.create(width, height);\n        this.cache[id] = canvasEntry;\n      }\n      if (trackTransform) {\n        addContextCurrentTransform(canvasEntry.context);\n      }\n      return canvasEntry;\n    },\n    clear() {\n      for (var id in this.cache) {\n        var canvasEntry = this.cache[id];\n        this.canvasFactory.destroy(canvasEntry);\n        delete this.cache[id];\n      }\n    },\n  };\n  return CachedCanvases;\n})();\n\nfunction compileType3Glyph(imgData) {\n  var POINT_TO_PROCESS_LIMIT = 1000;\n\n  var width = imgData.width,\n    height = imgData.height;\n  var i,\n    j,\n    j0,\n    width1 = width + 1;\n  var points = new Uint8Array(width1 * (height + 1));\n  // prettier-ignore\n  var POINT_TYPES =\n      new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n\n  // decodes bit-packed mask data\n  var lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  var data = new Uint8Array(lineSize * height),\n    pos = 0,\n    ii;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    var mask = 128,\n      elem = data0[i];\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  var count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  var outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    var p = i * width1;\n    var end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    var coords = [p % width1, i];\n\n    var type = points[p],\n      p0 = p,\n      pp;\n    do {\n      var step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1);\n      coords.push((p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  var drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      var o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nvar CanvasExtraState = (function CanvasExtraStateClosure() {\n  // eslint-disable-next-line no-shadow\n  function CanvasExtraState() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n    this.transferMaps = null;\n  }\n\n  CanvasExtraState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    },\n  };\n  return CanvasExtraState;\n})();\n\n/**\n * @type {any}\n */\nvar CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  var EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  var EXECUTION_STEPS = 10;\n\n  // eslint-disable-next-line no-shadow\n  function CanvasGraphics(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    webGLContext,\n    imageLayer,\n    optionalContentConfig\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.webGLContext = webGLContext;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see pdf\n    // spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.contentVisible = true;\n    this.markedContentStack = [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  function putBinaryImageData(ctx, imgData, transferMaps = null) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0,\n      destPos;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n    var i, j, thisChunkHeight, elemsInThisChunk;\n\n    let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n    if (transferMaps) {\n      switch (transferMaps.length) {\n        case 1:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[0];\n          transferMapBlue = transferMaps[0];\n          transferMapGray = transferMaps[0];\n          break;\n        case 4:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[1];\n          transferMapBlue = transferMaps[2];\n          transferMapGray = transferMaps[3];\n          break;\n      }\n    }\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      var srcLength = src.byteLength;\n      var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      var dest32DataLength = dest32.length;\n      var fullSrcDiff = (width + 7) >> 3;\n      var white = 0xffffffff;\n      var black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n      if (transferMapGray) {\n        if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n          [white, black] = [black, white];\n        }\n      }\n\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          var srcDiff = srcLength - srcPos;\n          let k = 0;\n          var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          var kEndUnrolled = kEnd & ~7;\n          var mask = 0;\n          var srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--; ) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < destPos; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n\n    for (var i = 0; i < totalChunks; i++) {\n      var thisChunkHeight =\n        i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      var destPos = 3; // alpha component offset\n      for (var j = 0; j < thisChunkHeight; j++) {\n        var mask = 0;\n        for (var k = 0; k < width; k++) {\n          if (!mask) {\n            var elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    var properties = [\n      \"strokeStyle\",\n      \"fillStyle\",\n      \"fillRule\",\n      \"globalAlpha\",\n      \"lineWidth\",\n      \"lineCap\",\n      \"lineJoin\",\n      \"miterLimit\",\n      \"globalCompositeOperation\",\n      \"font\",\n    ];\n    for (var i = 0, ii = properties.length; i < ii; i++) {\n      var property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    var length = bytes.length;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        var alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    var scale = 1 / 255;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    for (var i = 3; i < length; i += 4) {\n      var y =\n        maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n        maskData[i - 2] * 152 + // * 0.59 ....\n        maskData[i - 1] * 28; // * 0.11 ....\n      layerData[i] = transferMap\n        ? (layerData[i] * transferMap[y >> 8]) >> 8\n        : (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    width,\n    height,\n    subtype,\n    backdrop,\n    transferMap\n  ) {\n    var hasBackdrop = !!backdrop;\n    var r0 = hasBackdrop ? backdrop[0] : 0;\n    var g0 = hasBackdrop ? backdrop[1] : 0;\n    var b0 = hasBackdrop ? backdrop[2] : 0;\n\n    var composeFn;\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    var PIXELS_TO_PROCESS = 1048576;\n    var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (var row = 0; row < height; row += chunkSize) {\n      var chunkHeight = Math.min(chunkSize, height - row);\n      var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data, transferMap);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx, webGLContext) {\n    var mask = smask.canvas;\n    var maskCtx = smask.context;\n\n    ctx.setTransform(\n      smask.scaleX,\n      0,\n      0,\n      smask.scaleY,\n      smask.offsetX,\n      smask.offsetY\n    );\n\n    var backdrop = smask.backdrop || null;\n    if (!smask.transferMap && webGLContext.isEnabled) {\n      const composed = webGLContext.composeSMask({\n        layer: layerCtx.canvas,\n        mask,\n        properties: {\n          subtype: smask.subtype,\n          backdrop,\n        },\n      });\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n      return;\n    }\n    genericComposeSMask(\n      maskCtx,\n      layerCtx,\n      mask.width,\n      mask.height,\n      smask.subtype,\n      backdrop,\n      smask.transferMap\n    );\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  var NORMAL_CLIP = {};\n  var EO_CLIP = {};\n\n  CanvasGraphics.prototype = {\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null,\n    }) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, creating temporary\n      // transparent canvas when we have blend modes.\n      var width = this.ctx.canvas.width;\n      var height = this.ctx.canvas.height;\n\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        var transparentCanvas = this.cachedCanvases.getCanvas(\n          \"transparent\",\n          width,\n          height,\n          true\n        );\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        // The transform can be applied before rendering, transferring it to\n        // the new canvas.\n        this.ctx.transform.apply(\n          this.ctx,\n          this.compositeCtx.mozCurrentTransform\n        );\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    },\n\n    executeOperatorList: function CanvasGraphics_executeOperatorList(\n      operatorList,\n      executionStartIdx,\n      continueCallback,\n      stepper\n    ) {\n      var argsArray = operatorList.argsArray;\n      var fnArray = operatorList.fnArray;\n      var i = executionStartIdx || 0;\n      var argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      var chunkOperations =\n        argsArrayLen - i > EXECUTION_STEPS &&\n        typeof continueCallback === \"function\";\n      var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      var steps = 0;\n\n      var commonObjs = this.commonObjs;\n      var objs = this.objs;\n      var fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    },\n\n    endDrawing: function CanvasGraphics_endDrawing() {\n      // Finishing all opened operations such as SMask group painting.\n      while (this.stateStack.length || this.current.activeSMask !== null) {\n        this.restore();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n      this.webGLContext.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    },\n\n    // Graphics state\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    },\n    setLineCap: function CanvasGraphics_setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    },\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n      var ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    },\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setGState: function CanvasGraphics_setGState(states) {\n      for (var i = 0, ii = states.length; i < ii; i++) {\n        var state = states[i];\n        var key = state[0];\n        var value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              // If SMask is currrenly used, it needs to be suspended or\n              // finished. Suspend only makes sense when at least one save()\n              // was performed and state needs to be reverted on restore().\n              if (\n                this.stateStack.length > 0 &&\n                this.stateStack[this.stateStack.length - 1].activeSMask ===\n                  this.current.activeSMask\n              ) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n          case \"TR\":\n            this.current.transferMaps = value;\n        }\n      }\n    },\n    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n      var activeSMask = this.current.activeSMask;\n      var drawnWidth = activeSMask.canvas.width;\n      var drawnHeight = activeSMask.canvas.height;\n      var cacheId = \"smaskGroupAt\" + this.groupLevel;\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n\n      var currentCtx = this.ctx;\n      var currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      var groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\n      // and future ctx state restored.\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      this.ctx.save(); // save is needed since SMask will be resumed.\n      copyCtxState(groupCtx, this.ctx);\n\n      // Saving state for resuming.\n      this.current.resumeSMaskCtx = groupCtx;\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n\n      // SMask was composed, the results at the groupCtx can be cleared.\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    },\n    resumeSMaskGroup: function CanvasGraphics_resumeSMaskGroup() {\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\n      // any groupCtx state since restore() command (the only caller) will do\n      // that for us. See also beginSMaskGroup.\n      var groupCtx = this.current.resumeSMaskCtx;\n      var currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    },\n    save: function CanvasGraphics_save() {\n      this.ctx.save();\n      var old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    },\n    restore: function CanvasGraphics_restore() {\n      // SMask was suspended, we just need to resume it.\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n      // SMask has to be finished once there is no states that are using the\n      // same SMask.\n      if (\n        this.current.activeSMask !== null &&\n        (this.stateStack.length === 0 ||\n          this.stateStack[this.stateStack.length - 1].activeSMask !==\n            this.current.activeSMask)\n      ) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        // Ensure that the clipping path is reset (fixes issue6413.pdf).\n        this.pendingClip = null;\n\n        this._cachedGetSinglePixelWidth = null;\n      } else {\n        // We've finished all the SMask groups, reflect that in our state.\n        this.current.activeSMask = null;\n      }\n    },\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this._cachedGetSinglePixelWidth = null;\n    },\n\n    // Path\n    constructPath: function CanvasGraphics_constructPath(ops, args) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var x = current.x,\n        y = current.y;\n      for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            var width = args[j++];\n            var height = args[j++];\n            if (width === 0 && ctx.lineWidth < this.getSinglePixelWidth()) {\n              width = this.getSinglePixelWidth();\n            }\n            if (height === 0 && ctx.lineWidth < this.getSinglePixelWidth()) {\n              height = this.getSinglePixelWidth();\n            }\n            var xw = x + width;\n            var yh = y + height;\n            ctx.moveTo(x, y);\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3],\n              x,\n              y\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(\n              x,\n              y,\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3]\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    },\n    closePath: function CanvasGraphics_closePath() {\n      this.ctx.closePath();\n    },\n    stroke: function CanvasGraphics_stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var strokeColor = this.current.strokeColor;\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (this.contentVisible) {\n        if (\n          strokeColor &&\n          strokeColor.hasOwnProperty(\"type\") &&\n          strokeColor.type === \"Pattern\"\n        ) {\n          // for patterns, we transform to pattern space, calculate\n          // the pattern, call stroke, and restore to user space\n          ctx.save();\n          // The current transform will be replaced while building the pattern,\n          // but the line width needs to be adjusted by the current transform,\n          // so we must scale it. To properly fix this we should be using a\n          // pattern transform instead (see #10955).\n          const transform = ctx.mozCurrentTransform;\n          const scale = Util.singularValueDecompose2dScale(transform)[0];\n          ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n          ctx.lineWidth = Math.max(\n            this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n            this.current.lineWidth * scale\n          );\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          // Prevent drawing too thin lines by enforcing a minimum line width.\n          ctx.lineWidth = Math.max(\n            this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n            this.current.lineWidth\n          );\n          ctx.stroke();\n        }\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    },\n    closeStroke: function CanvasGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n    fill: function CanvasGraphics_fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      var needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        if (this.baseTransform) {\n          ctx.setTransform.apply(ctx, this.baseTransform);\n        }\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.contentVisible) {\n        if (this.pendingEOFill) {\n          ctx.fill(\"evenodd\");\n          this.pendingEOFill = false;\n        } else {\n          ctx.fill();\n        }\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    },\n    eoFill: function CanvasGraphics_eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    },\n    fillStroke: function CanvasGraphics_fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    },\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    },\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    },\n    endPath: function CanvasGraphics_endPath() {\n      this.consumePath();\n    },\n\n    // Clipping\n    clip: function CanvasGraphics_clip() {\n      this.pendingClip = NORMAL_CLIP;\n    },\n    eoClip: function CanvasGraphics_eoClip() {\n      this.pendingClip = EO_CLIP;\n    },\n\n    // Text\n    beginText: function CanvasGraphics_beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    endText: function CanvasGraphics_endText() {\n      var paths = this.pendingTextPaths;\n      var ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (var i = 0; i < paths.length; i++) {\n        var path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    },\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    },\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    },\n    setHScale: function CanvasGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n    setLeading: function CanvasGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\n      var fontObj = this.commonObjs.get(fontRefName);\n      var current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        warn(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      var name = fontObj.loadedName || \"sans-serif\";\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      var italic = fontObj.italic ? \"italic\" : \"normal\";\n      var typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      let browserFontSize = size;\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n      this.current.fontSizeScale = size / browserFontSize;\n\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    },\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    },\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\n      this.current.textRise = rise;\n    },\n    moveText: function CanvasGraphics_moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    },\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    nextLine: function CanvasGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n\n    paintChar(character, x, y, patternTransform) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var textRenderingMode = current.textRenderingMode;\n      var fontSize = current.fontSize / current.fontSizeScale;\n      var fillStrokeMode =\n        textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      var isAddToPathSet = !!(\n        textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n      );\n      const patternFill = current.patternFill && !font.missingFile;\n\n      var addToPath;\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fill();\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fillText(character, x, y);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.strokeText(character, x, y);\n        }\n      }\n\n      if (isAddToPathSet) {\n        var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath,\n        });\n      }\n    },\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      const { context: ctx } = this.cachedCanvases.getCanvas(\n        \"isFontSubpixelAAEnabled\",\n        10,\n        10\n      );\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      var data = ctx.getImageData(0, 0, 10, 10).data;\n      var enabled = false;\n      for (var i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n    },\n\n    showText: function CanvasGraphics_showText(glyphs) {\n      var current = this.current;\n      var font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      var fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      var ctx = this.ctx;\n      var fontSizeScale = current.fontSizeScale;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var fontDirection = current.fontDirection;\n      var textHScale = current.textHScale * fontDirection;\n      var glyphsLength = glyphs.length;\n      var vertical = font.vertical;\n      var spacingDir = vertical ? 1 : -1;\n      var defaultVMetrics = font.defaultVMetrics;\n      var widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      var simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace &&\n        !current.patternFill;\n\n      ctx.save();\n      let patternTransform;\n      if (current.patternFill) {\n        // TODO: Patterns are not applied correctly to text if a non-embedded\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      var lineWidth = current.lineWidth;\n      var scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        var fillStrokeMode =\n          current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      var x = 0,\n        i;\n      for (i = 0; i < glyphsLength; ++i) {\n        var glyph = glyphs[i];\n        if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        var restoreNeeded = false;\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var character = glyph.fontChar;\n        var accent = glyph.accent;\n        var scaledX, scaledY, scaledAccentX, scaledAccentY;\n        var width = glyph.width;\n        if (vertical) {\n          var vmetric, vx, vy;\n          vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          // Some standard fonts may not have the exact width: rescale per\n          // character if measured width is greater than expected glyph width\n          // and subpixel-aa is enabled, otherwise just center the glyph.\n          var measuredWidth =\n            ((ctx.measureText(character).width * 1000) / fontSize) *\n            fontSizeScale;\n          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n            var characterScaleX = width / measuredWidth;\n            restoreNeeded = true;\n            ctx.save();\n            ctx.scale(characterScaleX, 1);\n            scaledX /= characterScaleX;\n          } else if (width !== measuredWidth) {\n            scaledX +=\n              (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n          }\n        }\n\n        // Only attempt to draw the glyph if it is actually in the embedded font\n        // file or if there isn't a font file so the fallback font is shown.\n        if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n          if (simpleFillText && !accent) {\n            // common case\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(character, scaledX, scaledY, patternTransform);\n            if (accent) {\n              scaledAccentX =\n                scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n              scaledAccentY =\n                scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n              this.paintChar(\n                accent.fontChar,\n                scaledAccentX,\n                scaledAccentY,\n                patternTransform\n              );\n            }\n          }\n        }\n\n        var charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n    },\n\n    showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var fontSize = current.fontSize;\n      var fontDirection = current.fontDirection;\n      var spacingDir = font.vertical ? 1 : -1;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var textHScale = current.textHScale * fontDirection;\n      var fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      var glyphsLength = glyphs.length;\n      var isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      var i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n      this._cachedGetSinglePixelWidth = null;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (isNum(glyph)) {\n          spacingLength = (spacingDir * glyph * fontSize) / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n        if (this.contentVisible) {\n          this.processingType3 = glyph;\n          this.save();\n          ctx.scale(fontSize, fontSize);\n          ctx.transform.apply(ctx, fontMatrix);\n          this.executeOperatorList(operatorList);\n          this.restore();\n        }\n\n        var transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + spacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    },\n\n    // Type3 fonts\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    },\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(\n      xWidth,\n      yWidth,\n      llx,\n      lly,\n      urx,\n      ury\n    ) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    },\n\n    // Color\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n      var pattern;\n      if (IR[0] === \"TilingPattern\") {\n        var color = IR[1];\n        var baseTransform =\n          this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        var canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(\n              ctx,\n              this.commonObjs,\n              this.objs,\n              this.canvasFactory,\n              this.webGLContext\n            );\n          },\n        };\n        pattern = new TilingPattern(\n          IR,\n          color,\n          this.ctx,\n          canvasGraphicsFactory,\n          baseTransform\n        );\n      } else {\n        pattern = getShadingPatternFromIR(IR);\n      }\n      return pattern;\n    },\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    },\n    setFillColorN: function CanvasGraphics_setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    },\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    },\n\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n      if (!this.contentVisible) {\n        return;\n      }\n      var ctx = this.ctx;\n\n      this.save();\n      var pattern = getShadingPatternFromIR(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n\n      var inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        var canvas = ctx.canvas;\n        var width = canvas.width;\n        var height = canvas.height;\n\n        var bl = Util.applyTransform([0, 0], inv);\n        var br = Util.applyTransform([0, height], inv);\n        var ul = Util.applyTransform([width, 0], inv);\n        var ur = Util.applyTransform([width, height], inv);\n\n        var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    },\n\n    // Images\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\n      unreachable(\"Should not call beginInlineImage\");\n    },\n    beginImageData: function CanvasGraphics_beginImageData() {\n      unreachable(\"Should not call beginImageData\");\n    },\n\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(\n      matrix,\n      bbox\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        var width = bbox[2] - bbox[0];\n        var height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    },\n\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    },\n\n    beginGroup: function CanvasGraphics_beginGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n\n      this.save();\n      var currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implementing:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info(\"TODO: Support non-isolated groups.\");\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn(\"Knockout groups not supported.\");\n      }\n\n      var currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      var bounds = Util.getAxialAlignedBoundingBox(\n        group.bbox,\n        currentCtx.mozCurrentTransform\n      );\n      // Clip the bounding box to the current canvas.\n      var canvasBounds = [\n        0,\n        0,\n        currentCtx.canvas.width,\n        currentCtx.canvas.height,\n      ];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      var offsetX = Math.floor(bounds[0]);\n      var offsetY = Math.floor(bounds[1]);\n      var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      var scaleX = 1,\n        scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      var cacheId = \"groupAt\" + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n      }\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      var groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null, // used during suspend operation\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n\n      // Reseting mask state, masks will be applied on restore of the group.\n      this.current.activeSMask = null;\n    },\n\n    endGroup: function CanvasGraphics_endGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.groupLevel--;\n      var groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    },\n\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\n      this.save();\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    },\n\n    endAnnotations: function CanvasGraphics_endAnnotations() {\n      this.restore();\n    },\n\n    beginAnnotation: function CanvasGraphics_beginAnnotation(\n      rect,\n      transform,\n      matrix\n    ) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        var width = rect[2] - rect[0];\n        var height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    },\n\n    endAnnotation: function CanvasGraphics_endAnnotation() {\n      this.restore();\n    },\n\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n      if (!this.contentVisible) {\n        return;\n      }\n      var ctx = this.ctx;\n      var width = img.width,\n        height = img.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph && glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    },\n\n    paintImageMaskXObjectRepeat(\n      imgData,\n      scaleX,\n      skewX = 0,\n      skewY = 0,\n      scaleY,\n      positions\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      var width = imgData.width;\n      var height = imgData.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, imgData);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      var ctx = this.ctx;\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(\n          scaleX,\n          skewX,\n          skewY,\n          scaleY,\n          positions[i],\n          positions[i + 1]\n        );\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(\n      images\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      var ctx = this.ctx;\n\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      for (var i = 0, ii = images.length; i < ii; i++) {\n        var image = images[i];\n        var width = image.width,\n          height = image.height;\n\n        var maskCanvas = this.cachedCanvases.getCanvas(\n          \"maskCanvas\",\n          width,\n          height\n        );\n        var maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = \"source-in\";\n\n        maskCtx.fillStyle = isPatternFill\n          ? fillColor.getPattern(maskCtx, this)\n          : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    },\n\n    paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(\n      objId,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      var width = imgData.width;\n      var height = imgData.height;\n      var map = [];\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height,\n        });\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    },\n\n    paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(\n      imgData\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      var width = imgData.width;\n      var height = imgData.height;\n      var ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      var currentTransform = ctx.mozCurrentTransformInverse;\n      var a = currentTransform[0],\n        b = currentTransform[1];\n      var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n      var c = currentTransform[2],\n        d = currentTransform[3];\n      var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n\n      var imgToPaint, tmpCanvas;\n      // typeof check is needed due to node.js support, see issue #8489\n      if (\n        (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n        !imgData.data\n      ) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        var tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      var paintWidth = width,\n        paintHeight = height;\n      var tmpCanvasId = \"prescale1\";\n      // Vertical or horizontal scaling shall not be more than 2 to not lose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size.\n      while (\n        (widthScale > 2 && paintWidth > 1) ||\n        (heightScale > 2 && paintHeight > 1)\n      ) {\n        var newWidth = paintWidth,\n          newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = this.cachedCanvases.getCanvas(\n          tmpCanvasId,\n          newWidth,\n          newHeight\n        );\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(\n          imgToPaint,\n          0,\n          0,\n          paintWidth,\n          paintHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n      ctx.drawImage(\n        imgToPaint,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        -height,\n        width,\n        height\n      );\n\n      if (this.imageLayer) {\n        var position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3],\n        });\n      }\n      this.restore();\n    },\n\n    paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(\n      imgData,\n      map\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      var ctx = this.ctx;\n      var w = imgData.width;\n      var h = imgData.height;\n\n      var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      var tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n      for (var i = 0, ii = map.length; i < ii; i++) {\n        var entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(\n          tmpCanvas.canvas,\n          entry.x,\n          entry.y,\n          entry.w,\n          entry.h,\n          0,\n          -1,\n          1,\n          1\n        );\n        if (this.imageLayer) {\n          var position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h,\n          });\n        }\n        ctx.restore();\n      }\n    },\n\n    paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.ctx.fillRect(0, 0, 1, 1);\n    },\n\n    // Marked content\n\n    markPoint: function CanvasGraphics_markPoint(tag) {\n      // TODO Marked content.\n    },\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {\n      // TODO Marked content.\n    },\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    },\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(\n      tag,\n      properties\n    ) {\n      if (tag === \"OC\") {\n        this.markedContentStack.push({\n          visible: this.optionalContentConfig.isVisible(properties),\n        });\n      } else {\n        this.markedContentStack.push({\n          visible: true,\n        });\n      }\n      this.contentVisible = this.isContentVisible();\n    },\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {\n      this.markedContentStack.pop();\n      this.contentVisible = this.isContentVisible();\n    },\n\n    // Compatibility\n\n    beginCompat: function CanvasGraphics_beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    },\n    endCompat: function CanvasGraphics_endCompat() {\n      // TODO stop ignoring undefined operators\n    },\n\n    // Helper functions\n\n    consumePath: function CanvasGraphics_consumePath() {\n      var ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    },\n    getSinglePixelWidth(scale) {\n      if (this._cachedGetSinglePixelWidth === null) {\n        const inverse = this.ctx.mozCurrentTransformInverse;\n        // max of the current horizontal and vertical scale\n        this._cachedGetSinglePixelWidth = Math.sqrt(\n          Math.max(\n            inverse[0] * inverse[0] + inverse[1] * inverse[1],\n            inverse[2] * inverse[2] + inverse[3] * inverse[3]\n          )\n        );\n      }\n      return this._cachedGetSinglePixelWidth;\n    },\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n      var transform = this.ctx.mozCurrentTransform;\n      return [\n        transform[0] * x + transform[2] * y + transform[4],\n        transform[1] * x + transform[3] * y + transform[5],\n      ];\n    },\n\n    isContentVisible: function CanvasGraphics_isContentVisible() {\n      for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n        if (!this.markedContentStack[i].visible) {\n          return false;\n        }\n      }\n      return true;\n    },\n  };\n\n  for (var op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormatError, info, Util } from \"../shared/util.js\";\n\nvar ShadingIRs = {};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nShadingIRs.RadialAxial = {\n  fromIR: function RadialAxial_fromIR(raw) {\n    var type = raw[1];\n    var bbox = raw[2];\n    var colorStops = raw[3];\n    var p0 = raw[4];\n    var p1 = raw[5];\n    var r0 = raw[6];\n    var r1 = raw[7];\n    return {\n      type: \"Pattern\",\n      getPattern: function RadialAxial_getPattern(ctx) {\n        applyBoundingBox(ctx, bbox);\n        var grad;\n        if (type === \"axial\") {\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        } else if (type === \"radial\") {\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n        }\n\n        for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n          var c = colorStops[i];\n          grad.addColorStop(c[0], c[1]);\n        }\n        return grad;\n      },\n    };\n  },\n};\n\nvar createMeshCanvas = (function createMeshCanvasClosure() {\n  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n    // Very basic Gouraud-shaded triangle rasterization algorithm.\n    var coords = context.coords,\n      colors = context.colors;\n    var bytes = data.data,\n      rowSize = data.width * 4;\n    var tmp;\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    if (coords[p2 + 1] > coords[p3 + 1]) {\n      tmp = p2;\n      p2 = p3;\n      p3 = tmp;\n      tmp = c2;\n      c2 = c3;\n      c3 = tmp;\n    }\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n    var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n    var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n    var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n    var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n    var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n    if (y1 >= y3) {\n      return;\n    }\n    var c1r = colors[c1],\n      c1g = colors[c1 + 1],\n      c1b = colors[c1 + 2];\n    var c2r = colors[c2],\n      c2g = colors[c2 + 1],\n      c2b = colors[c2 + 2];\n    var c3r = colors[c3],\n      c3g = colors[c3 + 1],\n      c3b = colors[c3 + 2];\n\n    var minY = Math.round(y1),\n      maxY = Math.round(y3);\n    var xa, car, cag, cab;\n    var xb, cbr, cbg, cbb;\n    for (var y = minY; y <= maxY; y++) {\n      if (y < y2) {\n        let k;\n        if (y < y1) {\n          k = 0;\n        } else if (y1 === y2) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y2);\n        }\n        xa = x1 - (x1 - x2) * k;\n        car = c1r - (c1r - c2r) * k;\n        cag = c1g - (c1g - c2g) * k;\n        cab = c1b - (c1b - c2b) * k;\n      } else {\n        let k;\n        if (y > y3) {\n          k = 1;\n        } else if (y2 === y3) {\n          k = 0;\n        } else {\n          k = (y2 - y) / (y2 - y3);\n        }\n        xa = x2 - (x2 - x3) * k;\n        car = c2r - (c2r - c3r) * k;\n        cag = c2g - (c2g - c3g) * k;\n        cab = c2b - (c2b - c3b) * k;\n      }\n\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else if (y > y3) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y3);\n      }\n      xb = x1 - (x1 - x3) * k;\n      cbr = c1r - (c1r - c3r) * k;\n      cbg = c1g - (c1g - c3g) * k;\n      cbb = c1b - (c1b - c3b) * k;\n      var x1_ = Math.round(Math.min(xa, xb));\n      var x2_ = Math.round(Math.max(xa, xb));\n      var j = rowSize * y + x1_ * 4;\n      for (var x = x1_; x <= x2_; x++) {\n        k = (xa - x) / (xa - xb);\n        if (k < 0) {\n          k = 0;\n        } else if (k > 1) {\n          k = 1;\n        }\n        bytes[j++] = (car - (car - cbr) * k) | 0;\n        bytes[j++] = (cag - (cag - cbg) * k) | 0;\n        bytes[j++] = (cab - (cab - cbb) * k) | 0;\n        bytes[j++] = 255;\n      }\n    }\n  }\n\n  function drawFigure(data, figure, context) {\n    var ps = figure.coords;\n    var cs = figure.colors;\n    var i, ii;\n    switch (figure.type) {\n      case \"lattice\":\n        var verticesPerRow = figure.verticesPerRow;\n        var rows = Math.floor(ps.length / verticesPerRow) - 1;\n        var cols = verticesPerRow - 1;\n        for (i = 0; i < rows; i++) {\n          var q = i * verticesPerRow;\n          for (var j = 0; j < cols; j++, q++) {\n            drawTriangle(\n              data,\n              context,\n              ps[q],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n            drawTriangle(\n              data,\n              context,\n              ps[q + verticesPerRow + 1],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q + verticesPerRow + 1],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n          }\n        }\n        break;\n      case \"triangles\":\n        for (i = 0, ii = ps.length; i < ii; i += 3) {\n          drawTriangle(\n            data,\n            context,\n            ps[i],\n            ps[i + 1],\n            ps[i + 2],\n            cs[i],\n            cs[i + 1],\n            cs[i + 2]\n          );\n        }\n        break;\n      default:\n        throw new Error(\"illegal figure\");\n    }\n  }\n\n  // eslint-disable-next-line no-shadow\n  function createMeshCanvas(\n    bounds,\n    combinesScale,\n    coords,\n    colors,\n    figures,\n    backgroundColor,\n    cachedCanvases,\n    webGLContext\n  ) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    var EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    var BORDER_SIZE = 2;\n\n    var offsetX = Math.floor(bounds[0]);\n    var offsetY = Math.floor(bounds[1]);\n    var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n    var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n\n    var width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var scaleX = boundsWidth / width;\n    var scaleY = boundsHeight / height;\n\n    var context = {\n      coords,\n      colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    var paddedWidth = width + BORDER_SIZE * 2;\n    var paddedHeight = height + BORDER_SIZE * 2;\n\n    var canvas, tmpCanvas, i, ii;\n    if (webGLContext.isEnabled) {\n      canvas = webGLContext.drawFigures({\n        width,\n        height,\n        backgroundColor,\n        figures,\n        context,\n      });\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=972126\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    } else {\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      var tmpCtx = tmpCanvas.context;\n\n      var data = tmpCtx.createImageData(width, height);\n      if (backgroundColor) {\n        var bytes = data.data;\n        for (i = 0, ii = bytes.length; i < ii; i += 4) {\n          bytes[i] = backgroundColor[0];\n          bytes[i + 1] = backgroundColor[1];\n          bytes[i + 2] = backgroundColor[2];\n          bytes[i + 3] = 255;\n        }\n      }\n      for (i = 0; i < figures.length; i++) {\n        drawFigure(data, figures[i], context);\n      }\n      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    }\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n  return createMeshCanvas;\n})();\n\nShadingIRs.Mesh = {\n  fromIR: function Mesh_fromIR(raw) {\n    // var type = raw[1];\n    var coords = raw[2];\n    var colors = raw[3];\n    var figures = raw[4];\n    var bounds = raw[5];\n    var matrix = raw[6];\n    var bbox = raw[7];\n    var background = raw[8];\n    return {\n      type: \"Pattern\",\n      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n        applyBoundingBox(ctx, bbox);\n        var scale;\n        if (shadingFill) {\n          scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n        } else {\n          // Obtain scale from matrix and current transformation matrix.\n          scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n          if (matrix) {\n            var matrixScale = Util.singularValueDecompose2dScale(matrix);\n            scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n          }\n        }\n\n        // Rasterizing on the main thread since sending/queue large canvases\n        // might cause OOM.\n        var temporaryPatternCanvas = createMeshCanvas(\n          bounds,\n          scale,\n          coords,\n          colors,\n          figures,\n          shadingFill ? null : background,\n          owner.cachedCanvases,\n          owner.webGLContext\n        );\n\n        if (!shadingFill) {\n          ctx.setTransform.apply(ctx, owner.baseTransform);\n          if (matrix) {\n            ctx.transform.apply(ctx, matrix);\n          }\n        }\n\n        ctx.translate(\n          temporaryPatternCanvas.offsetX,\n          temporaryPatternCanvas.offsetY\n        );\n        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n        return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n      },\n    };\n  },\n};\n\nShadingIRs.Dummy = {\n  fromIR: function Dummy_fromIR() {\n    return {\n      type: \"Pattern\",\n      getPattern: function Dummy_fromIR_getPattern() {\n        return \"hotpink\";\n      },\n    };\n  },\n};\n\nfunction getShadingPatternFromIR(raw) {\n  var shadingIR = ShadingIRs[raw[0]];\n  if (!shadingIR) {\n    throw new Error(`Unknown IR type: ${raw[0]}`);\n  }\n  return shadingIR.fromIR(raw);\n}\n\n/**\n * @type {any}\n */\nvar TilingPattern = (function TilingPatternClosure() {\n  var PaintType = {\n    COLORED: 1,\n    UNCOLORED: 2,\n  };\n\n  var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n\n  // eslint-disable-next-line no-shadow\n  function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n    this.type = \"Pattern\";\n    this.ctx = ctx;\n  }\n\n  TilingPattern.prototype = {\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n      var operatorList = this.operatorList;\n      var bbox = this.bbox;\n      var xstep = this.xstep;\n      var ystep = this.ystep;\n      var paintType = this.paintType;\n      var tilingType = this.tilingType;\n      var color = this.color;\n      var canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n      info(\"TilingType: \" + tilingType);\n\n      // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n      // described by bbox, and may repeat regularly by shifting the cell by\n      // xstep and ystep.\n      // Because the HTML5 canvas API does not support pattern repetition with\n      // gaps in between, we use the xstep/ystep instead of the bbox's size.\n      //\n      // This has the following consequences (similarly for ystep):\n      //\n      // - If xstep is the same as bbox, then there is no observable difference.\n      //\n      // - If xstep is larger than bbox, then the pattern canvas is partially\n      //   empty: the area bounded by bbox is painted, the outside area is void.\n      //\n      // - If xstep is smaller than bbox, then the pixels between xstep and the\n      //   bbox boundary will be missing. This is INCORRECT behavior.\n      //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n      //   but overlapping cells without common pixels are still valid.\n      //   TODO: Fix the implementation, to allow this scenario to be painted\n      //   correctly.\n\n      var x0 = bbox[0],\n        y0 = bbox[1],\n        x1 = bbox[2],\n        y1 = bbox[3];\n\n      // Obtain scale from matrix and current transformation matrix.\n      var matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n      var curMatrixScale = Util.singularValueDecompose2dScale(\n        this.baseTransform\n      );\n      var combinedScale = [\n        matrixScale[0] * curMatrixScale[0],\n        matrixScale[1] * curMatrixScale[1],\n      ];\n\n      // Use width and height values that are as close as possible to the end\n      // result when the pattern is used. Too low value makes the pattern look\n      // blurry. Too large value makes it look too crispy.\n      var dimx = this.getSizeAndScale(\n        xstep,\n        this.ctx.canvas.width,\n        combinedScale[0]\n      );\n      var dimy = this.getSizeAndScale(\n        ystep,\n        this.ctx.canvas.height,\n        combinedScale[1]\n      );\n\n      var tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        dimx.size,\n        dimy.size,\n        true\n      );\n      var tmpCtx = tmpCanvas.context;\n      var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n      graphics.groupLevel = owner.groupLevel;\n\n      this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n      graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n      // transform coordinates to pattern space\n      graphics.transform(1, 0, 0, 1, -x0, -y0);\n\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n      graphics.executeOperatorList(operatorList);\n\n      this.ctx.transform(1, 0, 0, 1, x0, y0);\n\n      // Rescale canvas so that the ctx.createPattern call generates a pattern\n      // with the desired size.\n      this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n      return tmpCanvas.canvas;\n    },\n\n    getSizeAndScale: function TilingPattern_getSizeAndScale(\n      step,\n      realOutputSize,\n      scale\n    ) {\n      // xstep / ystep may be negative -- normalize.\n      step = Math.abs(step);\n      // MAX_PATTERN_SIZE is used to avoid OOM situation.\n      // Use the destination canvas's size if it is bigger than the hard-coded\n      // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n      // whole canvas.\n      var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n      var size = Math.ceil(step * scale);\n      if (size >= maxSize) {\n        size = maxSize;\n      } else {\n        scale = size / step;\n      }\n      return { scale, size };\n    },\n\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n      if (Array.isArray(bbox) && bbox.length === 4) {\n        var bboxWidth = x1 - x0;\n        var bboxHeight = y1 - y0;\n        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n        graphics.clip();\n        graphics.endPath();\n      }\n    },\n\n    setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(\n      graphics,\n      paintType,\n      color\n    ) {\n      const context = graphics.ctx,\n        current = graphics.current;\n      switch (paintType) {\n        case PaintType.COLORED:\n          var ctx = this.ctx;\n          context.fillStyle = ctx.fillStyle;\n          context.strokeStyle = ctx.strokeStyle;\n          current.fillColor = ctx.fillStyle;\n          current.strokeColor = ctx.strokeStyle;\n          break;\n        case PaintType.UNCOLORED:\n          var cssColor = Util.makeCssRgb(color[0], color[1], color[2]);\n          context.fillStyle = cssColor;\n          context.strokeStyle = cssColor;\n          // Set color needed by image masks (fixes issues 3226 and 8741).\n          current.fillColor = cssColor;\n          current.strokeColor = cssColor;\n          break;\n        default:\n          throw new FormatError(`Unsupported paint type: ${paintType}`);\n      }\n    },\n\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\n      ctx = this.ctx;\n      // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n      ctx.setTransform.apply(ctx, this.baseTransform);\n      ctx.transform.apply(ctx, this.matrix);\n\n      var temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n      return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n    },\n  };\n\n  return TilingPattern;\n})();\n\nexport { getShadingPatternFromIR, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error, prefer-const: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function (capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from \"../shared/util.js\";\nimport { SimpleXMLParser } from \"../shared/xml_parser.js\";\n\nclass Metadata {\n  constructor(data) {\n    assert(typeof data === \"string\", \"Metadata: input is not a string\");\n\n    // Ghostscript may produce invalid metadata, so try to repair that first.\n    data = this._repair(data);\n\n    // Convert the string to an XML document.\n    const parser = new SimpleXMLParser();\n    const xmlDocument = parser.parseFromString(data);\n\n    this._metadataMap = new Map();\n\n    if (xmlDocument) {\n      this._parse(xmlDocument);\n    }\n  }\n\n  _repair(data) {\n    // Start by removing any \"junk\" before the first tag (see issue 10395).\n    return data\n      .replace(/^[^<]+/, \"\")\n      .replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n        const bytes = codes\n          .replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n            return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n          })\n          .replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n            switch (name) {\n              case \"amp\":\n                return \"&\";\n              case \"apos\":\n                return \"'\";\n              case \"gt\":\n                return \">\";\n              case \"lt\":\n                return \"<\";\n              case \"quot\":\n                return '\"';\n            }\n            throw new Error(`_repair: ${name} isn't defined.`);\n          });\n\n        let chars = \"\";\n        for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n          const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n          if (\n            code >= /* Space = */ 32 &&\n            code < /* Delete = */ 127 &&\n            code !== /* '<' = */ 60 &&\n            code !== /* '>' = */ 62 &&\n            code !== /* '&' = */ 38\n          ) {\n            chars += String.fromCharCode(code);\n          } else {\n            chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n          }\n        }\n\n        return \">\" + chars;\n      });\n  }\n\n  _parse(xmlDocument) {\n    let rdf = xmlDocument.documentElement;\n\n    if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n      // Wrapped in <xmpmeta>\n      rdf = rdf.firstChild;\n      while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n        rdf = rdf.nextSibling;\n      }\n    }\n\n    const nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n    if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n      return;\n    }\n\n    const children = rdf.childNodes;\n    for (let i = 0, ii = children.length; i < ii; i++) {\n      const desc = children[i];\n      if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n        continue;\n      }\n\n      for (let j = 0, jj = desc.childNodes.length; j < jj; j++) {\n        if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n          const entry = desc.childNodes[j];\n          const name = entry.nodeName.toLowerCase();\n\n          this._metadataMap.set(name, entry.textContent.trim());\n        }\n      }\n    }\n  }\n\n  get(name) {\n    return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n  }\n\n  getAll() {\n    return Object.fromEntries(this._metadataMap);\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// The code for XMLParserBase copied from\n// https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/avm2/natives/xml.ts\n\nimport { encodeToXmlString } from \"./util.js\";\n\nconst XMLParserErrorCode = {\n  NoError: 0,\n  EndOfDocument: -1,\n  UnterminatedCdat: -2,\n  UnterminatedXmlDeclaration: -3,\n  UnterminatedDoctypeDeclaration: -4,\n  UnterminatedComment: -5,\n  MalformedElement: -6,\n  OutOfMemory: -7,\n  UnterminatedAttributeValue: -8,\n  UnterminatedElement: -9,\n  ElementNeverBegun: -10,\n};\n\nfunction isWhitespace(s, index) {\n  const ch = s[index];\n  return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n}\n\nfunction isWhitespaceString(s) {\n  for (let i = 0, ii = s.length; i < ii; i++) {\n    if (!isWhitespace(s, i)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass XMLParserBase {\n  _resolveEntities(s) {\n    return s.replace(/&([^;]+);/g, (all, entity) => {\n      if (entity.substring(0, 2) === \"#x\") {\n        return String.fromCodePoint(parseInt(entity.substring(2), 16));\n      } else if (entity.substring(0, 1) === \"#\") {\n        return String.fromCodePoint(parseInt(entity.substring(1), 10));\n      }\n      switch (entity) {\n        case \"lt\":\n          return \"<\";\n        case \"gt\":\n          return \">\";\n        case \"amp\":\n          return \"&\";\n        case \"quot\":\n          return '\"';\n      }\n      return this.onResolveEntity(entity);\n    });\n  }\n\n  _parseContent(s, start) {\n    const attributes = [];\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    while (\n      pos < s.length &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\" &&\n      s[pos] !== \"?\"\n    ) {\n      skipWs();\n      let attrName = \"\",\n        attrValue = \"\";\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n        attrName += s[pos];\n        ++pos;\n      }\n      skipWs();\n      if (s[pos] !== \"=\") {\n        return null;\n      }\n      ++pos;\n      skipWs();\n      const attrEndChar = s[pos];\n      if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n        return null;\n      }\n      const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n      if (attrEndIndex < 0) {\n        return null;\n      }\n      attrValue = s.substring(pos, attrEndIndex);\n      attributes.push({\n        name: attrName,\n        value: this._resolveEntities(attrValue),\n      });\n      pos = attrEndIndex + 1;\n      skipWs();\n    }\n    return {\n      name,\n      attributes,\n      parsed: pos - start,\n    };\n  }\n\n  _parseProcessingInstruction(s, start) {\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    const attrStart = pos;\n    while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n      ++pos;\n    }\n    const value = s.substring(attrStart, pos);\n    return {\n      name,\n      value,\n      parsed: pos - start,\n    };\n  }\n\n  parseXml(s) {\n    let i = 0;\n    while (i < s.length) {\n      const ch = s[i];\n      let j = i;\n      if (ch === \"<\") {\n        ++j;\n        const ch2 = s[j];\n        let q;\n        switch (ch2) {\n          case \"/\":\n            ++j;\n            q = s.indexOf(\">\", j);\n            if (q < 0) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onEndElement(s.substring(j, q));\n            j = q + 1;\n            break;\n          case \"?\":\n            ++j;\n            const pi = this._parseProcessingInstruction(s, j);\n            if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n              this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n              return;\n            }\n            this.onPi(pi.name, pi.value);\n            j += pi.parsed + 2;\n            break;\n          case \"!\":\n            if (s.substring(j + 1, j + 3) === \"--\") {\n              q = s.indexOf(\"-->\", j + 3);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedComment);\n                return;\n              }\n              this.onComment(s.substring(j + 3, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n              q = s.indexOf(\"]]>\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedCdat);\n                return;\n              }\n              this.onCdata(s.substring(j + 8, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n              const q2 = s.indexOf(\"[\", j + 8);\n              let complexDoctype = false;\n              q = s.indexOf(\">\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                return;\n              }\n              if (q2 > 0 && q > q2) {\n                q = s.indexOf(\"]>\", j + 8);\n                if (q < 0) {\n                  this.onError(\n                    XMLParserErrorCode.UnterminatedDoctypeDeclaration\n                  );\n                  return;\n                }\n                complexDoctype = true;\n              }\n              const doctypeContent = s.substring(\n                j + 8,\n                q + (complexDoctype ? 1 : 0)\n              );\n              this.onDoctype(doctypeContent);\n              j = q + (complexDoctype ? 2 : 1);\n            } else {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            break;\n          default:\n            const content = this._parseContent(s, j);\n            if (content === null) {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            let isClosed = false;\n            if (\n              s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\"\n            ) {\n              isClosed = true;\n            } else if (\n              s.substring(j + content.parsed, j + content.parsed + 1) !== \">\"\n            ) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onBeginElement(content.name, content.attributes, isClosed);\n            j += content.parsed + (isClosed ? 2 : 1);\n            break;\n        }\n      } else {\n        while (j < s.length && s[j] !== \"<\") {\n          j++;\n        }\n        const text = s.substring(i, j);\n        this.onText(this._resolveEntities(text));\n      }\n      i = j;\n    }\n  }\n\n  onResolveEntity(name) {\n    return `&${name};`;\n  }\n\n  onPi(name, value) {}\n\n  onComment(text) {}\n\n  onCdata(text) {}\n\n  onDoctype(doctypeContent) {}\n\n  onText(text) {}\n\n  onBeginElement(name, attributes, isEmpty) {}\n\n  onEndElement(name) {}\n\n  onError(code) {}\n}\n\nclass SimpleDOMNode {\n  constructor(nodeName, nodeValue) {\n    this.nodeName = nodeName;\n    this.nodeValue = nodeValue;\n\n    Object.defineProperty(this, \"parentNode\", { value: null, writable: true });\n  }\n\n  get firstChild() {\n    return this.childNodes && this.childNodes[0];\n  }\n\n  get nextSibling() {\n    const childNodes = this.parentNode.childNodes;\n    if (!childNodes) {\n      return undefined;\n    }\n    const index = childNodes.indexOf(this);\n    if (index === -1) {\n      return undefined;\n    }\n    return childNodes[index + 1];\n  }\n\n  get textContent() {\n    if (!this.childNodes) {\n      return this.nodeValue || \"\";\n    }\n    return this.childNodes\n      .map(function (child) {\n        return child.textContent;\n      })\n      .join(\"\");\n  }\n\n  hasChildNodes() {\n    return this.childNodes && this.childNodes.length > 0;\n  }\n\n  /**\n   * Search a node in the tree with the given path\n   * foo.bar[nnn], i.e. find the nnn-th node named\n   * bar under a node named foo.\n   *\n   * @param {Array} paths - an array of objects as\n   * returned by {parseXFAPath}.\n   * @param {number} pos - the current position in\n   * the paths array.\n   * @returns {SimpleDOMNode} The node corresponding\n   * to the path or null if not found.\n   */\n  searchNode(paths, pos) {\n    if (pos >= paths.length) {\n      return this;\n    }\n\n    const component = paths[pos];\n    const stack = [];\n    let node = this;\n\n    while (true) {\n      if (component.name === node.nodeName) {\n        if (component.pos === 0) {\n          const res = node.searchNode(paths, pos + 1);\n          if (res !== null) {\n            return res;\n          }\n        } else if (stack.length === 0) {\n          return null;\n        } else {\n          const [parent] = stack.pop();\n          let siblingPos = 0;\n          for (const child of parent.childNodes) {\n            if (component.name === child.nodeName) {\n              if (siblingPos === component.pos) {\n                return child.searchNode(paths, pos + 1);\n              }\n              siblingPos++;\n            }\n          }\n          // We didn't find the correct sibling\n          // so just return the first found node\n          return node.searchNode(paths, pos + 1);\n        }\n      }\n\n      if (node.childNodes && node.childNodes.length !== 0) {\n        stack.push([node, 0]);\n        node = node.childNodes[0];\n      } else if (stack.length === 0) {\n        return null;\n      } else {\n        while (stack.length !== 0) {\n          const [parent, currentPos] = stack.pop();\n          const newPos = currentPos + 1;\n          if (newPos < parent.childNodes.length) {\n            stack.push([parent, newPos]);\n            node = parent.childNodes[newPos];\n            break;\n          }\n        }\n        if (stack.length === 0) {\n          return null;\n        }\n      }\n    }\n  }\n\n  dump(buffer) {\n    if (this.nodeName === \"#text\") {\n      buffer.push(encodeToXmlString(this.nodeValue));\n      return;\n    }\n\n    buffer.push(`<${this.nodeName}`);\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        buffer.push(\n          ` ${attribute.name}=\\\"${encodeToXmlString(attribute.value)}\\\"`\n        );\n      }\n    }\n    if (this.hasChildNodes()) {\n      buffer.push(\">\");\n      for (const child of this.childNodes) {\n        child.dump(buffer);\n      }\n      buffer.push(`</${this.nodeName}>`);\n    } else if (this.nodeValue) {\n      buffer.push(`>${encodeToXmlString(this.nodeValue)}</${this.nodeName}>`);\n    } else {\n      buffer.push(\"/>\");\n    }\n  }\n}\n\nclass SimpleXMLParser extends XMLParserBase {\n  constructor(hasAttributes = false) {\n    super();\n    this._currentFragment = null;\n    this._stack = null;\n    this._errorCode = XMLParserErrorCode.NoError;\n    this._hasAttributes = hasAttributes;\n  }\n\n  parseFromString(data) {\n    this._currentFragment = [];\n    this._stack = [];\n    this._errorCode = XMLParserErrorCode.NoError;\n\n    this.parseXml(data);\n\n    if (this._errorCode !== XMLParserErrorCode.NoError) {\n      return undefined; // return undefined on error\n    }\n\n    // We should only have one root.\n    const [documentElement] = this._currentFragment;\n    if (!documentElement) {\n      return undefined; // Return undefined if no root was found.\n    }\n    return { documentElement };\n  }\n\n  onResolveEntity(name) {\n    switch (name) {\n      case \"apos\":\n        return \"'\";\n    }\n    return super.onResolveEntity(name);\n  }\n\n  onText(text) {\n    if (isWhitespaceString(text)) {\n      return;\n    }\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onCdata(text) {\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onBeginElement(name, attributes, isEmpty) {\n    const node = new SimpleDOMNode(name);\n    node.childNodes = [];\n    if (this._hasAttributes) {\n      node.attributes = attributes;\n    }\n    this._currentFragment.push(node);\n    if (isEmpty) {\n      return;\n    }\n    this._stack.push(this._currentFragment);\n    this._currentFragment = node.childNodes;\n  }\n\n  onEndElement(name) {\n    this._currentFragment = this._stack.pop() || [];\n    const lastElement = this._currentFragment[this._currentFragment.length - 1];\n    if (!lastElement) {\n      return;\n    }\n    for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n      lastElement.childNodes[i].parentNode = lastElement;\n    }\n  }\n\n  onError(code) {\n    this._errorCode = code;\n  }\n}\n\nexport { SimpleDOMNode, SimpleXMLParser };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  isVisible(group) {\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available. Until\n      // we implement this, just fallback to using the group policy for now.\n      if (group.expression) {\n        warn(\"Visibility expression not supported yet.\");\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    if (!this._groups.size) {\n      return null;\n    }\n    return Object.fromEntries(this._groups);\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n\n    const initialData = params.initialData;\n    if (initialData && initialData.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader && firstReader.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader && fullReader.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeReaders.slice(0);\n    readers.forEach(function (rangeReader) {\n      rangeReader.cancel(reason);\n    });\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(stream, queuedChunks, progressiveDone = false) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({ value: undefined, done: true });\n      });\n      this._requests = [];\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable no-multi-str */\n\nimport { shadow } from \"../shared/util.js\";\n\nclass WebGLContext {\n  constructor({ enable = false }) {\n    this._enabled = enable === true;\n  }\n\n  get isEnabled() {\n    let enabled = this._enabled;\n    if (enabled) {\n      enabled = WebGLUtils.tryInitGL();\n    }\n    return shadow(this, \"isEnabled\", enabled);\n  }\n\n  composeSMask({ layer, mask, properties }) {\n    return WebGLUtils.composeSMask(layer, mask, properties);\n  }\n\n  drawFigures({ width, height, backgroundColor, figures, context }) {\n    return WebGLUtils.drawFigures(\n      width,\n      height,\n      backgroundColor,\n      figures,\n      context\n    );\n  }\n\n  clear() {\n    WebGLUtils.cleanup();\n  }\n}\n\nvar WebGLUtils = (function WebGLUtilsClosure() {\n  function loadShader(gl, code, shaderType) {\n    var shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      var errorMsg = gl.getShaderInfoLog(shader);\n      throw new Error(\"Error during shader compilation: \" + errorMsg);\n    }\n    return shader;\n  }\n  function createVertexShader(gl, code) {\n    return loadShader(gl, code, gl.VERTEX_SHADER);\n  }\n  function createFragmentShader(gl, code) {\n    return loadShader(gl, code, gl.FRAGMENT_SHADER);\n  }\n  function createProgram(gl, shaders) {\n    var program = gl.createProgram();\n    for (var i = 0, ii = shaders.length; i < ii; ++i) {\n      gl.attachShader(program, shaders[i]);\n    }\n    gl.linkProgram(program);\n    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n      var errorMsg = gl.getProgramInfoLog(program);\n      throw new Error(\"Error during program linking: \" + errorMsg);\n    }\n    return program;\n  }\n  function createTexture(gl, image, textureId) {\n    gl.activeTexture(textureId);\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Set the parameters so we can render any size image.\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    // Upload the image into the texture.\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    return texture;\n  }\n\n  var currentGL, currentCanvas;\n  function generateGL() {\n    if (currentGL) {\n      return;\n    }\n\n    // The temporary canvas is used in the WebGL context.\n    currentCanvas = document.createElement(\"canvas\");\n    currentGL = currentCanvas.getContext(\"webgl\", {\n      premultipliedalpha: false,\n    });\n  }\n\n  var smaskVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n\n  var smaskFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n\n  var smaskCache = null;\n\n  function initSmaskGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n    cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n\n    var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n    var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n    var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n\n    // provide texture coordinates for the rectangle.\n    var texCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0.0, 0.0,\n      1.0, 0.0,\n      0.0, 1.0,\n      0.0, 1.0,\n      1.0, 0.0,\n      1.0, 1.0]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.uniform1i(texLayerLocation, 0);\n    gl.uniform1i(texMaskLocation, 1);\n\n    smaskCache = cache;\n  }\n\n  function composeSMask(layer, mask, properties) {\n    var width = layer.width,\n      height = layer.height;\n\n    if (!smaskCache) {\n      initSmaskGL();\n    }\n    var cache = smaskCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    if (properties.backdrop) {\n      gl.uniform4f(\n        cache.resolutionLocation,\n        properties.backdrop[0],\n        properties.backdrop[1],\n        properties.backdrop[2],\n        1\n      );\n    } else {\n      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n    }\n    gl.uniform1i(\n      cache.subtypeLocation,\n      properties.subtype === \"Luminosity\" ? 1 : 0\n    );\n\n    // Create a textures\n    var texture = createTexture(gl, layer, gl.TEXTURE0);\n    var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n\n    // Create a buffer and put a single clipspace rectangle in\n    // it (2 triangles)\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0, 0,\n      width, 0,\n      0, height,\n      0, height,\n      width, 0,\n      width, height]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // draw\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    gl.flush();\n\n    gl.deleteTexture(texture);\n    gl.deleteTexture(maskTexture);\n    gl.deleteBuffer(buffer);\n\n    return canvas;\n  }\n\n  var figuresVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n\n  var figuresFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n\n  var figuresCache = null;\n\n  function initFiguresGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n    cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n\n    figuresCache = cache;\n  }\n\n  function drawFigures(width, height, backgroundColor, figures, context) {\n    if (!figuresCache) {\n      initFiguresGL();\n    }\n    var cache = figuresCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    // count triangle points\n    var count = 0;\n    var i, ii, rows;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      switch (figures[i].type) {\n        case \"lattice\":\n          rows = (figures[i].coords.length / figures[i].verticesPerRow) | 0;\n          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n          break;\n        case \"triangles\":\n          count += figures[i].coords.length;\n          break;\n      }\n    }\n    // transfer data\n    var coords = new Float32Array(count * 2);\n    var colors = new Uint8Array(count * 3);\n    var coordsMap = context.coords,\n      colorsMap = context.colors;\n    var pIndex = 0,\n      cIndex = 0;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n        ps = figure.coords,\n        cs = figure.colors;\n      switch (figure.type) {\n        case \"lattice\":\n          var cols = figure.verticesPerRow;\n          rows = (ps.length / cols) | 0;\n          for (var row = 1; row < rows; row++) {\n            var offset = row * cols + 1;\n            for (var col = 1; col < cols; col++, offset++) {\n              coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n              coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n              coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n              colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n              colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n              colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n\n              coords[pIndex + 6] = coords[pIndex + 2];\n              coords[pIndex + 7] = coords[pIndex + 3];\n              coords[pIndex + 8] = coords[pIndex + 4];\n              coords[pIndex + 9] = coords[pIndex + 5];\n              coords[pIndex + 10] = coordsMap[ps[offset]];\n              coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n              colors[cIndex + 9] = colors[cIndex + 3];\n              colors[cIndex + 10] = colors[cIndex + 4];\n              colors[cIndex + 11] = colors[cIndex + 5];\n              colors[cIndex + 12] = colors[cIndex + 6];\n              colors[cIndex + 13] = colors[cIndex + 7];\n              colors[cIndex + 14] = colors[cIndex + 8];\n              colors[cIndex + 15] = colorsMap[cs[offset]];\n              colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n              colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n              pIndex += 12;\n              cIndex += 18;\n            }\n          }\n          break;\n        case \"triangles\":\n          for (var j = 0, jj = ps.length; j < jj; j++) {\n            coords[pIndex] = coordsMap[ps[j]];\n            coords[pIndex + 1] = coordsMap[ps[j] + 1];\n            colors[cIndex] = colorsMap[cs[j]];\n            colors[cIndex + 1] = colorsMap[cs[j] + 1];\n            colors[cIndex + 2] = colorsMap[cs[j] + 2];\n            pIndex += 2;\n            cIndex += 3;\n          }\n          break;\n      }\n    }\n\n    // draw\n    if (backgroundColor) {\n      gl.clearColor(\n        backgroundColor[0] / 255,\n        backgroundColor[1] / 255,\n        backgroundColor[2] / 255,\n        1.0\n      );\n    } else {\n      gl.clearColor(0, 0, 0, 0);\n    }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    var coordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    var colorsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.colorLocation);\n    gl.vertexAttribPointer(\n      cache.colorLocation,\n      3,\n      gl.UNSIGNED_BYTE,\n      false,\n      0,\n      0\n    );\n\n    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n\n    gl.flush();\n\n    gl.deleteBuffer(coordsBuffer);\n    gl.deleteBuffer(colorsBuffer);\n\n    return canvas;\n  }\n\n  return {\n    tryInitGL() {\n      try {\n        generateGL();\n        return !!currentGL;\n      } catch (ex) {}\n      return false;\n    },\n\n    composeSMask,\n\n    drawFigures,\n\n    cleanup() {\n      if (smaskCache && smaskCache.canvas) {\n        smaskCache.canvas.width = 0;\n        smaskCache.canvas.height = 0;\n      }\n      if (figuresCache && figuresCache.canvas) {\n        figuresCache.canvas.width = 0;\n        figuresCache.canvas.height = 0;\n      }\n      smaskCache = null;\n      figuresCache = null;\n    },\n  };\n})();\n\nexport { WebGLContext };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(parameters, isRenderable = false, ignoreBorder = false) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeCssRgb(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLSectionElement} container\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(container, trigger, data) {\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof AnnotationElement\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the link annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LinkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"linkAnnotation\";\n\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else {\n      this._bindLink(link, data.dest);\n    }\n\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.navigateTo(destination);\n      }\n      return false;\n    };\n    if (destination) {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  /**\n   * Render the widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof WidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Show only the container for unsupported field types.\n    return this.container;\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const textContent = storage.getOrCreateValue(id, this.data.fieldValue);\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n\n      element.addEventListener(\"input\", function (event) {\n        storage.setValue(id, event.target.value);\n      });\n\n      element.addEventListener(\"blur\", function (event) {\n        event.target.setSelectionRange(0, 0);\n      });\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n\n      let font = null;\n      if (\n        this.data.fontRefName &&\n        this.page.commonObjs.has(this.data.fontRefName)\n      ) {\n        font = this.page.commonObjs.get(this.data.fontRefName);\n      }\n      this._setTextStyle(element, font);\n    }\n\n    if (this.data.textAlignment !== null) {\n      element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @param {Object} font\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element, font) {\n    // TODO: This duplicates some of the logic in CanvasGraphics.setFont().\n    const style = element.style;\n    style.fontSize = `${this.data.fontSize}px`;\n    style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n\n    if (!font) {\n      return;\n    }\n\n    let bold = \"normal\";\n    if (font.black) {\n      bold = \"900\";\n    } else if (font.bold) {\n      bold = \"bold\";\n    }\n    style.fontWeight = bold;\n    style.fontStyle = font.italic ? \"italic\" : \"normal\";\n\n    // Use a reasonable default font if the font doesn't specify a fallback.\n    const fontFamily = font.loadedName ? `\"${font.loadedName}\", ` : \"\";\n    const fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n    style.fontFamily = fontFamily + fallbackName;\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the checkbox widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof CheckboxWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    const value = storage.getOrCreateValue(\n      id,\n      data.fieldValue && data.fieldValue !== \"Off\"\n    );\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = this.data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n\n    element.addEventListener(\"change\", function (event) {\n      storage.setValue(id, event.target.checked);\n    });\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the radio button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof RadioButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    const value = storage.getOrCreateValue(\n      id,\n      data.fieldValue === data.buttonValue\n    );\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n\n    element.addEventListener(\"change\", function (event) {\n      const name = event.target.name;\n      for (const radio of document.getElementsByName(name)) {\n        if (radio !== event.target) {\n          storage.setValue(\n            radio.parentNode.getAttribute(\"data-annotation-id\"),\n            false\n          );\n        }\n      }\n      storage.setValue(id, event.target.checked);\n    });\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  /**\n   * Render the push button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof PushButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the choice widget annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof ChoiceWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getOrCreateValue` is\n    // used and the full array of field values is stored.\n    storage.getOrCreateValue(\n      id,\n      this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : null\n    );\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    selectElement.addEventListener(\"input\", function (event) {\n      const options = event.target.options;\n      const value = options[options.selectedIndex].value;\n      storage.setValue(id, value);\n    });\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the popup annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PopupAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElement = this.layer.querySelector(selector);\n    if (!parentElement) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: parentElement,\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const parentTop = parseFloat(parentElement.style.top),\n      parentLeft = parseFloat(parentElement.style.left),\n      parentWidth = parseFloat(parentElement.style.width);\n    const popupLeft = parentLeft + parentWidth;\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-parentTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  /**\n   * Render the popup's HTML element.\n   *\n   * @public\n   * @memberof PopupElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.setAttribute(\"hidden\", true);\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeCssRgb(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    // Attach the event listeners to the trigger element.\n    this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n    this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n    this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hasAttribute(\"hidden\")) {\n      this.hideElement.removeAttribute(\"hidden\");\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n      this.hideElement.setAttribute(\"hidden\", true);\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the free text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof FreeTextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the line annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the square annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquareAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the circle annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CircleAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the polyline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PolylineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(this.container, polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the caret annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CaretAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the ink annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof InkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(this.container, polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the highlight annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof HighlightAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"highlightAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the underline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof UnderlineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"underlineAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the squiggly annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquigglyAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squigglyAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the strikeout annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StrikeOutAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"strikeoutAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the stamp annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StampAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, /* isRenderable = */ true);\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    if (this.linkService.eventBus) {\n      this.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n        source: this,\n        id: stringToPDFString(filename),\n        filename,\n        content,\n      });\n    }\n  }\n\n  /**\n   * Render the file attachment annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof FileAttachmentAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(this.container, trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    if (!this.downloadManager) {\n      warn(\"Download cannot be started due to unavailable download manager\");\n      return;\n    }\n    this.downloadManager.downloadData(this.content, this.filename, \"\");\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms:\n          typeof parameters.renderInteractiveForms === \"boolean\"\n            ? parameters.renderInteractiveForms\n            : true,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n      });\n      if (element.isRenderable) {\n        parameters.div.appendChild(element.render());\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    for (const data of parameters.annotations) {\n      const element = parameters.div.querySelector(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (element) {\n        element.style.transform = `matrix(${parameters.viewport.transform.join(\n          \",\"\n        )})`;\n      }\n    }\n    parameters.div.removeAttribute(\"hidden\");\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\n/**\n * @typedef {Object} TextLayerRenderTask\n * @property {Promise<void>} promise\n * @property {() => void} cancel\n * @property {(expandDivs: boolean) => void} expandTextDivs\n */\n\n/**\n * @type {(renderParameters: TextLayerRenderParameters) => TextLayerRenderTask}\n */\nvar renderTextLayer = (function renderTextLayerClosure() {\n  var MAX_TEXT_DIVS_TO_RENDER = 100000;\n\n  var NonWhitespaceRegexp = /\\S/;\n\n  function isAllWhitespace(str) {\n    return !NonWhitespaceRegexp.test(str);\n  }\n\n  function appendText(task, geom, styles) {\n    // Initialize all used properties to keep the caches monomorphic.\n    var textDiv = document.createElement(\"span\");\n    var textDivProperties = {\n      angle: 0,\n      canvasWidth: 0,\n      isWhitespace: false,\n      originalTransform: null,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      scale: 1,\n    };\n\n    task._textDivs.push(textDiv);\n    if (isAllWhitespace(geom.str)) {\n      textDivProperties.isWhitespace = true;\n      task._textDivProperties.set(textDiv, textDivProperties);\n      return;\n    }\n\n    var tx = Util.transform(task._viewport.transform, geom.transform);\n    var angle = Math.atan2(tx[1], tx[0]);\n    var style = styles[geom.fontName];\n    if (style.vertical) {\n      angle += Math.PI / 2;\n    }\n    var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n    var fontAscent = fontHeight;\n    if (style.ascent) {\n      fontAscent = style.ascent * fontAscent;\n    } else if (style.descent) {\n      fontAscent = (1 + style.descent) * fontAscent;\n    }\n\n    let left, top;\n    if (angle === 0) {\n      left = tx[4];\n      top = tx[5] - fontAscent;\n    } else {\n      left = tx[4] + fontAscent * Math.sin(angle);\n      top = tx[5] - fontAscent * Math.cos(angle);\n    }\n    // Setting the style properties individually, rather than all at once,\n    // should be OK since the `textDiv` isn't appended to the document yet.\n    textDiv.style.left = `${left}px`;\n    textDiv.style.top = `${top}px`;\n    textDiv.style.fontSize = `${fontHeight}px`;\n    textDiv.style.fontFamily = style.fontFamily;\n\n    textDiv.textContent = geom.str;\n    // `fontName` is only used by the FontInspector, and we only use `dataset`\n    // here to make the font name available in the debugger.\n    if (task._fontInspectorEnabled) {\n      textDiv.dataset.fontName = geom.fontName;\n    }\n    if (angle !== 0) {\n      textDivProperties.angle = angle * (180 / Math.PI);\n    }\n    // We don't bother scaling single-char text divs, because it has very\n    // little effect on text highlighting. This makes scrolling on docs with\n    // lots of such divs a lot faster.\n    let shouldScaleText = false;\n    if (geom.str.length > 1) {\n      shouldScaleText = true;\n    } else if (geom.transform[0] !== geom.transform[3]) {\n      const absScaleX = Math.abs(geom.transform[0]),\n        absScaleY = Math.abs(geom.transform[3]);\n      // When the horizontal/vertical scaling differs significantly, also scale\n      // even single-char text to improve highlighting (fixes issue11713.pdf).\n      if (\n        absScaleX !== absScaleY &&\n        Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n      ) {\n        shouldScaleText = true;\n      }\n    }\n    if (shouldScaleText) {\n      if (style.vertical) {\n        textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n      } else {\n        textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n      }\n    }\n    task._textDivProperties.set(textDiv, textDivProperties);\n    if (task._textContentStream) {\n      task._layoutText(textDiv);\n    }\n\n    if (task._enhanceTextSelection) {\n      var angleCos = 1,\n        angleSin = 0;\n      if (angle !== 0) {\n        angleCos = Math.cos(angle);\n        angleSin = Math.sin(angle);\n      }\n      var divWidth =\n        (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n      var divHeight = fontHeight;\n\n      var m, b;\n      if (angle !== 0) {\n        m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n        b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n      } else {\n        b = [left, top, left + divWidth, top + divHeight];\n      }\n\n      task._bounds.push({\n        left: b[0],\n        top: b[1],\n        right: b[2],\n        bottom: b[3],\n        div: textDiv,\n        size: [divWidth, divHeight],\n        m,\n      });\n    }\n  }\n\n  function render(task) {\n    if (task._canceled) {\n      return;\n    }\n    var textDivs = task._textDivs;\n    var capability = task._capability;\n    var textDivsLength = textDivs.length;\n\n    // No point in rendering many divs as it would make the browser\n    // unusable even after the divs are rendered.\n    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n      task._renderingDone = true;\n      capability.resolve();\n      return;\n    }\n\n    if (!task._textContentStream) {\n      for (var i = 0; i < textDivsLength; i++) {\n        task._layoutText(textDivs[i]);\n      }\n    }\n\n    task._renderingDone = true;\n    capability.resolve();\n  }\n\n  function findPositiveMin(ts, offset, count) {\n    let result = 0;\n    for (let i = 0; i < count; i++) {\n      const t = ts[offset++];\n      if (t > 0) {\n        result = result ? Math.min(t, result) : t;\n      }\n    }\n    return result;\n  }\n\n  function expand(task) {\n    var bounds = task._bounds;\n    var viewport = task._viewport;\n\n    var expanded = expandBounds(viewport.width, viewport.height, bounds);\n    for (var i = 0; i < expanded.length; i++) {\n      var div = bounds[i].div;\n      var divProperties = task._textDivProperties.get(div);\n      if (divProperties.angle === 0) {\n        divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n        divProperties.paddingTop = bounds[i].top - expanded[i].top;\n        divProperties.paddingRight = expanded[i].right - bounds[i].right;\n        divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n        task._textDivProperties.set(div, divProperties);\n        continue;\n      }\n      // Box is rotated -- trying to find padding so rotated div will not\n      // exceed its expanded bounds.\n      var e = expanded[i],\n        b = bounds[i];\n      var m = b.m,\n        c = m[0],\n        s = m[1];\n      // Finding intersections with expanded box.\n      var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n      var ts = new Float64Array(64);\n      points.forEach(function (p, j) {\n        var t = Util.applyTransform(p, m);\n        ts[j + 0] = c && (e.left - t[0]) / c;\n        ts[j + 4] = s && (e.top - t[1]) / s;\n        ts[j + 8] = c && (e.right - t[0]) / c;\n        ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n        ts[j + 16] = s && (e.left - t[0]) / -s;\n        ts[j + 20] = c && (e.top - t[1]) / c;\n        ts[j + 24] = s && (e.right - t[0]) / -s;\n        ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n        ts[j + 32] = c && (e.left - t[0]) / -c;\n        ts[j + 36] = s && (e.top - t[1]) / -s;\n        ts[j + 40] = c && (e.right - t[0]) / -c;\n        ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n        ts[j + 48] = s && (e.left - t[0]) / s;\n        ts[j + 52] = c && (e.top - t[1]) / -c;\n        ts[j + 56] = s && (e.right - t[0]) / s;\n        ts[j + 60] = c && (e.bottom - t[1]) / -c;\n      });\n      // Not based on math, but to simplify calculations, using cos and sin\n      // absolute values to not exceed the box (it can but insignificantly).\n      var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n      task._textDivProperties.set(div, divProperties);\n    }\n  }\n\n  function expandBounds(width, height, boxes) {\n    var bounds = boxes.map(function (box, i) {\n      return {\n        x1: box.left,\n        y1: box.top,\n        x2: box.right,\n        y2: box.bottom,\n        index: i,\n        x1New: undefined,\n        x2New: undefined,\n      };\n    });\n    expandBoundsLTR(width, bounds);\n    var expanded = new Array(boxes.length);\n    bounds.forEach(function (b) {\n      var i = b.index;\n      expanded[i] = {\n        left: b.x1New,\n        top: 0,\n        right: b.x2New,\n        bottom: 0,\n      };\n    });\n\n    // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n    // array and objects.\n    boxes.map(function (box, i) {\n      var e = expanded[i],\n        b = bounds[i];\n      b.x1 = box.top;\n      b.y1 = width - e.right;\n      b.x2 = box.bottom;\n      b.y2 = width - e.left;\n      b.index = i;\n      b.x1New = undefined;\n      b.x2New = undefined;\n    });\n    expandBoundsLTR(height, bounds);\n\n    bounds.forEach(function (b) {\n      var i = b.index;\n      expanded[i].top = b.x1New;\n      expanded[i].bottom = b.x2New;\n    });\n    return expanded;\n  }\n\n  function expandBoundsLTR(width, bounds) {\n    // Sorting by x1 coordinate and walk by the bounds in the same order.\n    bounds.sort(function (a, b) {\n      return a.x1 - b.x1 || a.index - b.index;\n    });\n\n    // First we see on the horizon is a fake boundary.\n    var fakeBoundary = {\n      x1: -Infinity,\n      y1: -Infinity,\n      x2: 0,\n      y2: Infinity,\n      index: -1,\n      x1New: 0,\n      x2New: 0,\n    };\n    var horizon = [\n      {\n        start: -Infinity,\n        end: Infinity,\n        boundary: fakeBoundary,\n      },\n    ];\n\n    bounds.forEach(function (boundary) {\n      // Searching for the affected part of horizon.\n      // TODO red-black tree or simple binary search\n      var i = 0;\n      while (i < horizon.length && horizon[i].end <= boundary.y1) {\n        i++;\n      }\n      var j = horizon.length - 1;\n      while (j >= 0 && horizon[j].start >= boundary.y2) {\n        j--;\n      }\n\n      var horizonPart, affectedBoundary;\n      var q,\n        k,\n        maxXNew = -Infinity;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        var xNew;\n        if (affectedBoundary.x2 > boundary.x1) {\n          // In the middle of the previous element, new x shall be at the\n          // boundary start. Extending if further if the affected boundary\n          // placed on top of the current one.\n          xNew =\n            affectedBoundary.index > boundary.index\n              ? affectedBoundary.x1New\n              : boundary.x1;\n        } else if (affectedBoundary.x2New === undefined) {\n          // We have some space in between, new x in middle will be a fair\n          // choice.\n          xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n        } else {\n          // Affected boundary has x2new set, using it as new x.\n          xNew = affectedBoundary.x2New;\n        }\n        if (xNew > maxXNew) {\n          maxXNew = xNew;\n        }\n      }\n\n      // Set new x1 for current boundary.\n      boundary.x1New = maxXNew;\n\n      // Adjusts new x2 for the affected boundaries.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New === undefined) {\n          // Was not set yet, choosing new x if possible.\n          if (affectedBoundary.x2 > boundary.x1) {\n            // Current and affected boundaries intersect. If affected boundary\n            // is placed on top of the current, shrinking the affected.\n            if (affectedBoundary.index > boundary.index) {\n              affectedBoundary.x2New = affectedBoundary.x2;\n            }\n          } else {\n            affectedBoundary.x2New = maxXNew;\n          }\n        } else if (affectedBoundary.x2New > maxXNew) {\n          // Affected boundary is touching new x, pushing it back.\n          affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n        }\n      }\n\n      // Fixing the horizon.\n      var changedHorizon = [],\n        lastBoundary = null;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        // Checking which boundary will be visible.\n        var useBoundary =\n          affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n        if (lastBoundary === useBoundary) {\n          // Merging with previous.\n          changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n        } else {\n          changedHorizon.push({\n            start: horizonPart.start,\n            end: horizonPart.end,\n            boundary: useBoundary,\n          });\n          lastBoundary = useBoundary;\n        }\n      }\n      if (horizon[i].start < boundary.y1) {\n        changedHorizon[0].start = boundary.y1;\n        changedHorizon.unshift({\n          start: horizon[i].start,\n          end: boundary.y1,\n          boundary: horizon[i].boundary,\n        });\n      }\n      if (boundary.y2 < horizon[j].end) {\n        changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n        changedHorizon.push({\n          start: boundary.y2,\n          end: horizon[j].end,\n          boundary: horizon[j].boundary,\n        });\n      }\n\n      // Set x2 new of boundary that is no longer visible (see overlapping case\n      // above).\n      // TODO more efficient, e.g. via reference counting.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New !== undefined) {\n          continue;\n        }\n        var used = false;\n        for (\n          k = i - 1;\n          !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n          k--\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (\n          k = j + 1;\n          !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n          k++\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (k = 0; !used && k < changedHorizon.length; k++) {\n          used = changedHorizon[k].boundary === affectedBoundary;\n        }\n        if (!used) {\n          affectedBoundary.x2New = maxXNew;\n        }\n      }\n\n      Array.prototype.splice.apply(\n        horizon,\n        [i, j - i + 1].concat(changedHorizon)\n      );\n    });\n\n    // Set new x2 for all unset boundaries.\n    horizon.forEach(function (horizonPart) {\n      var affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n      }\n    });\n  }\n\n  /**\n   * Text layer rendering task.\n   *\n   * @param {TextContent} textContent\n   * @param {HTMLElement} container\n   * @param {PageViewport} viewport\n   * @param {Array} textDivs\n   * @param {boolean} enhanceTextSelection\n   * @private\n   */\n  function TextLayerRenderTask({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!(\n      globalThis.FontInspector && globalThis.FontInspector.enabled\n    );\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        /* Avoid \"Uncaught promise\" messages in the console. */\n      });\n  }\n  TextLayerRenderTask.prototype = {\n    get promise() {\n      return this._capability.promise;\n    },\n\n    cancel: function TextLayer_cancel() {\n      this._canceled = true;\n      if (this._reader) {\n        this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\n        this._reader = null;\n      }\n      if (this._renderTimer !== null) {\n        clearTimeout(this._renderTimer);\n        this._renderTimer = null;\n      }\n      this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n    },\n\n    _processItems(items, styleCache) {\n      for (let i = 0, len = items.length; i < len; i++) {\n        this._textContentItemsStr.push(items[i].str);\n        appendText(this, items[i], styleCache);\n      }\n    },\n\n    _layoutText(textDiv) {\n      const textDivProperties = this._textDivProperties.get(textDiv);\n      if (textDivProperties.isWhitespace) {\n        return;\n      }\n\n      let transform = \"\";\n      if (textDivProperties.canvasWidth !== 0) {\n        const { fontSize, fontFamily } = textDiv.style;\n\n        // Only build font string and set to context if different from last.\n        if (\n          fontSize !== this._layoutTextLastFontSize ||\n          fontFamily !== this._layoutTextLastFontFamily\n        ) {\n          this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n          this._layoutTextLastFontSize = fontSize;\n          this._layoutTextLastFontFamily = fontFamily;\n        }\n        // Only measure the width for multi-char text divs, see `appendText`.\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          transform = `scaleX(${textDivProperties.scale})`;\n        }\n      }\n      if (textDivProperties.angle !== 0) {\n        transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n      }\n      if (transform.length > 0) {\n        if (this._enhanceTextSelection) {\n          textDivProperties.originalTransform = transform;\n        }\n        textDiv.style.transform = transform;\n      }\n      this._textDivProperties.set(textDiv, textDivProperties);\n      this._container.appendChild(textDiv);\n    },\n\n    _render: function TextLayer_render(timeout) {\n      const capability = createPromiseCapability();\n      let styleCache = Object.create(null);\n\n      // The temporary canvas is used to measure text length in the DOM.\n      const canvas = this._document.createElement(\"canvas\");\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        canvas.mozOpaque = true;\n      }\n      this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n      if (this._textContent) {\n        const textItems = this._textContent.items;\n        const textStyles = this._textContent.styles;\n        this._processItems(textItems, textStyles);\n        capability.resolve();\n      } else if (this._textContentStream) {\n        const pump = () => {\n          this._reader.read().then(({ value, done }) => {\n            if (done) {\n              capability.resolve();\n              return;\n            }\n\n            Object.assign(styleCache, value.styles);\n            this._processItems(value.items, styleCache);\n            pump();\n          }, capability.reject);\n        };\n\n        this._reader = this._textContentStream.getReader();\n        pump();\n      } else {\n        throw new Error(\n          'Neither \"textContent\" nor \"textContentStream\"' +\n            \" parameters specified.\"\n        );\n      }\n\n      capability.promise.then(() => {\n        styleCache = null;\n        if (!timeout) {\n          // Render right away\n          render(this);\n        } else {\n          // Schedule\n          this._renderTimer = setTimeout(() => {\n            render(this);\n            this._renderTimer = null;\n          }, timeout);\n        }\n      }, this._capability.reject);\n    },\n\n    expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n      if (!this._enhanceTextSelection || !this._renderingDone) {\n        return;\n      }\n      if (this._bounds !== null) {\n        expand(this);\n        this._bounds = null;\n      }\n      const transformBuf = [],\n        paddingBuf = [];\n\n      for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n        const div = this._textDivs[i];\n        const divProps = this._textDivProperties.get(div);\n\n        if (divProps.isWhitespace) {\n          continue;\n        }\n        if (expandDivs) {\n          transformBuf.length = 0;\n          paddingBuf.length = 0;\n\n          if (divProps.originalTransform) {\n            transformBuf.push(divProps.originalTransform);\n          }\n          if (divProps.paddingTop > 0) {\n            paddingBuf.push(`${divProps.paddingTop}px`);\n            transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingRight > 0) {\n            paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingBottom > 0) {\n            paddingBuf.push(`${divProps.paddingBottom}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingLeft > 0) {\n            paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n            transformBuf.push(\n              `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n            );\n          } else {\n            paddingBuf.push(0);\n          }\n\n          div.style.padding = paddingBuf.join(\" \");\n          if (transformBuf.length) {\n            div.style.transform = transformBuf.join(\" \");\n          }\n        } else {\n          div.style.padding = null;\n          div.style.transform = divProps.originalTransform;\n        }\n      }\n    },\n  };\n\n  // eslint-disable-next-line no-shadow\n  function renderTextLayer(renderParameters) {\n    var task = new TextLayerRenderTask({\n      textContent: renderParameters.textContent,\n      textContentStream: renderParameters.textContentStream,\n      container: renderParameters.container,\n      viewport: renderParameters.viewport,\n      textDivs: renderParameters.textDivs,\n      textContentItemsStr: renderParameters.textContentItemsStr,\n      enhanceTextSelection: renderParameters.enhanceTextSelection,\n    });\n    task._render(renderParameters.timeout);\n    return task;\n  }\n\n  return renderTextLayer;\n})();\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n/* eslint no-var: error */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\n// modified by ngx-extended-pdf-viewer\n// import { isNodeJS } from \"../shared/is_node.js\";\n// end of modification\n\n/** @type {any} */\nlet SVGGraphics = function () {\n  throw new Error(\"Not implemented: SVGGraphics\");\n};\n\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89,\n      0x50,\n      0x4e,\n      0x47,\n      0x0d,\n      0x0a,\n      0x1a,\n      0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    // modified by ngx-extended-pdf-viewer - we don't need node.js support \n    function deflateSync(literals) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n    }\n    // end of modification\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  // eslint-disable-next-line no-shadow\n  SVGGraphics = class SVGGraphics {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement &&\n        current.txtElement.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeCssRgb(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeCssRgb(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0] = Util.applyTransform([x0, y0], matrix);\n      const [tx1, ty1] = Util.applyTransform([x1, y1], matrix);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeCssRgb(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        this.extraStack.forEach(function (prev) {\n          prev.clipGroup = null;\n        });\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const {\n      allowRangeRequests,\n      suggestedLength,\n    } = validateRangeRequestCapabilities({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange,\n    });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.reject(exception);\n    });\n    this._requests = [];\n    this._cachedChunks = [];\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (/\\.pdf$/i.test(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    \"Unexpected server response (\" +\n      status +\n      ') while retrieving PDF \"' +\n      url +\n      '\".',\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const bytes = Array.from(value, function (ch) {\n          return ch.charCodeAt(0) & 0xff;\n        });\n        value = decoder.decode(new Uint8Array(bytes));\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController && abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const {\n          allowRangeRequests,\n          suggestedLength,\n        } = validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: this._stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(reason => {\n        if (reason && reason.name === \"AbortError\") {\n          return;\n        }\n        throw reason;\n      });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n"]}